# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_gcmessages_client_fantasy.proto
# plugin: python-betterproto

from dataclasses import dataclass
from typing import List

import betterproto

from .dota_shared_enums import FantasyRoles, FantasySelectionMode


class Dota2013PassportSelectionIndices(betterproto.Enum):
    AllstarPlayer0 = 0
    AllstarPlayer1 = 1
    AllstarPlayer2 = 2
    AllstarPlayer3 = 3
    AllstarPlayer4 = 4
    AllstarPlayer5 = 5
    AllstarPlayer6 = 6
    AllstarPlayer7 = 7
    AllstarPlayer8 = 8
    AllstarPlayer9 = 9
    QualpredWest0 = 10
    QualpredWest1 = 11
    QualpredWest2 = 12
    QualpredWest3 = 13
    QualpredWest4 = 14
    QualpredWest5 = 15
    QualpredWest6 = 16
    QualpredWest7 = 17
    QualpredWest8 = 18
    QualpredWest9 = 19
    QualpredWest10 = 20
    QualpredWest11 = 21
    QualpredWest12 = 22
    QualpredWest13 = 23
    QualpredWest14 = 24
    QualpredEast0 = 25
    QualpredEast1 = 26
    QualpredEast2 = 27
    QualpredEast3 = 28
    QualpredEast4 = 29
    QualpredEast5 = 30
    QualpredEast6 = 31
    QualpredEast7 = 32
    QualpredEast8 = 33
    QualpredEast9 = 34
    QualpredEast10 = 35
    QualpredEast11 = 36
    QualpredEast12 = 37
    QualpredEast13 = 38
    QualpredEast14 = 39
    TeamcupTeam = 40
    TeamcupPlayer = 41
    TeamcupTeamLock = 42
    TeamcupPlayerLock = 43
    Eventpred0 = 44
    Eventpred1 = 45
    Eventpred2 = 46
    Eventpred3 = 47
    Eventpred4 = 48
    Eventpred5 = 49
    Eventpred6 = 50
    Eventpred7 = 51
    Eventpred8 = 52
    Eventpred9 = 53
    Eventpred10 = 54
    Eventpred11 = 55
    Eventpred12 = 56
    Eventpred13 = 57
    Eventpred14 = 58
    Eventpred15 = 59
    Eventpred16 = 60
    Eventpred17 = 61
    Eventpred18 = 62
    Eventpred19 = 63
    Eventpred20 = 64
    Eventpred21 = 65
    Eventpred22 = 66
    Eventpred23 = 67
    Eventpred24 = 68
    Eventpred25 = 69
    Eventpred26 = 70
    Eventpred27 = 71
    Eventpred28 = 72
    Eventpred29 = 73
    Eventpred30 = 74
    Eventpred31 = 75
    Eventpred32 = 76
    Eventpred33 = 77
    Eventpred34 = 78
    Eventpred35 = 79
    Eventpred36 = 80
    Eventpred37 = 81
    Eventpred38 = 82
    Eventpred39 = 83
    Eventpred40 = 84
    Eventpred41 = 85
    Eventpred42 = 86
    Eventpred43 = 87
    Solo0 = 88
    Solo1 = 89
    Solo2 = 90
    Solo3 = 91
    Solo4 = 92
    Solo5 = 93
    Solo6 = 94
    Solo7 = 95


class CMsgDotaCreateFantasyLeagueResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    TooManyLeagues = 2
    InvalidTeamCount = 3
    CreationDisabled = 4


class CMsgDotaFantasyLeagueEditInfoResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2


class CMsgDotaFantasyLeagueFindResponseEResult(betterproto.Enum):
    Success = 0
    LeagueNotFound = 1
    BadPassword = 2
    Unspecified = 3
    Full = 4
    AlreadyMember = 5
    LeagueLocked = 6


class CMsgDotaFantasyLeagueInfoResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    BadLeagueId = 2


class CMsgDotaFantasyLeagueMatchupsResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    BadLeagueId = 2
    NoPermission = 3


class CMsgDotaEditFantasyTeamResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    InvalidTeamInfo = 2
    NameAlreadyTaken = 3
    NoPermission = 4


class CMsgDotaFantasyTeamScoreResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2
    OwnerNotInLeague = 3


class CMsgDotaFantasyTeamStandingsResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2


class CMsgDotaFantasyPlayerScoreResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2


class CMsgDotaFantasyPlayerStandingsResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2


class CMsgDotaFantasyLeagueCreateResponseEResult(betterproto.Enum):
    Success = 0
    NoPermission = 1
    BadSeasonId = 2
    BadLeagueName = 3
    BadTeamName = 4
    Unspecified = 5
    FailedLogoUpload = 6
    NoTicket = 7


class CMsgDotaFantasyTeamCreateResponseEResult(betterproto.Enum):
    Success = 0
    NoPermission = 1
    FailedLogoUpload = 2
    BadFantasyLeagueId = 3
    BadName = 4
    Full = 5
    AlreadyMember = 6
    BadPassword = 7
    Unspecified = 8
    NoTicket = 9
    LeagueLocked = 10


class CMsgDotaFantasyLeagueEditInvitesResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1


class CMsgDotaFantasyLeagueDraftPlayerResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    InvalidFantasyLeague = 2
    FantasyLeagueNotDrafting = 3
    OwnerNotInLeague = 4
    NotOwnersTurn = 5
    PlayerInvalid = 6
    PlayerUnavailable = 7
    PlayerNoValidSlots = 8


class CMsgDotaFantasyTeamRosterSwapResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    OwnerNotInLeague = 2
    SlotsInvalid = 3
    SlotLocked = 4


class CMsgDotaFantasyTeamRosterAddDropResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    OwnerNotInLeague = 2
    PlayerNotAvailable = 3
    PlayerNotOnTeam = 4
    TradeAlreadyPending = 5


class CMsgDotaFantasyTeamTradesResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2


class CMsgDotaFantasyTeamTradeCancelResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2
    NoTrade = 3


class CMsgDotaFantasyTeamRosterResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2
    OwnerNotInLeague = 3


class CMsgDotaFantasyPlayerHisoricalStatsResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2


class CMsgDotaFantasyMessagesResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2


class CMsgDotaFantasyRemoveOwnerResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NoPermission = 2
    LeagueLocked = 3
    NotAMember = 4


class CMsgDotaFantasyScheduledMatchesResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1


class CMsgDotaFantasyLeaveLeagueResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NotMember = 2
    LeagueNotFound = 3
    DraftActive = 4


class CMsgDotaFantasyPlayerScoreDetailsResponseEResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    NotMember = 2


class CMsgClientToGcGetPlayerCardRosterResponseResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    InvalidLeagueId = 2
    InvalidTimestamp = 3


class CMsgClientToGcSetPlayerCardRosterResponseResult(betterproto.Enum):
    Success = 0
    Unspecified = 1
    InvalidLeagueId = 2
    InvalidTimestamp = 3
    PlayerCardNotOwned = 4
    InvalidSlot = 5
    FailedCardInfo = 6
    AccountDuplicate = 7
    LockedTimestamp = 8


class CMsgDotaFantasyDpcLeagueStatusERosterStatus(betterproto.Enum):
    Unset = 0
    Partial = 1
    Full = 2
    Concluded = 3


@dataclass(eq=False, repr=False)
class CMsgDotaPlayerInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    country_code: str = betterproto.string_field(3)
    fantasy_role: "FantasyRoles" = betterproto.enum_field(4)
    team_id: int = betterproto.uint32_field(5)
    team_name: str = betterproto.string_field(6)
    team_tag: str = betterproto.string_field(7)
    sponsor: str = betterproto.string_field(8)
    is_locked: bool = betterproto.bool_field(9)
    is_pro: bool = betterproto.bool_field(10)
    real_name: str = betterproto.string_field(11)
    birthdate: int = betterproto.uint32_field(12)
    total_earnings: int = betterproto.uint32_field(13)
    results: List["CMsgDotaPlayerInfoResults"] = betterproto.message_field(14)
    team_url_logo: str = betterproto.string_field(15)
    audit_entries: List["CMsgDotaPlayerInfoAuditEntry"] = betterproto.message_field(16)


@dataclass(eq=False, repr=False)
class CMsgDotaPlayerInfoResults(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    placement: int = betterproto.uint32_field(2)
    earnings: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaPlayerInfoAuditEntry(betterproto.Message):
    start_timestamp: int = betterproto.uint32_field(1)
    end_timestamp: int = betterproto.uint32_field(2)
    team_id: int = betterproto.uint32_field(3)
    team_name: str = betterproto.string_field(4)
    team_tag: str = betterproto.string_field(5)
    team_url_logo: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class CMsgDotaPlayerInfoList(betterproto.Message):
    player_infos: List["CMsgDotaPlayerInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotadpcProfileInfo(betterproto.Message):
    player_info: "CMsgDotaPlayerInfo" = betterproto.message_field(1)
    prediction_info: "CMsgDotadpcProfileInfoPredictionInfo" = betterproto.message_field(2)
    fantasy_info: "CMsgDotadpcProfileInfoFantasyInfo" = betterproto.message_field(3)
    disabled_notifications: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotadpcProfileInfoPredictionInfo(betterproto.Message):
    percent: int = betterproto.uint32_field(1)
    shard_winnings: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotadpcProfileInfoFantasyInfo(betterproto.Message):
    top_90_finishes: int = betterproto.uint32_field(1)
    top_75_finishes: int = betterproto.uint32_field(2)
    top_50_finishes: int = betterproto.uint32_field(3)
    shard_winnings: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotaLeaderboards(betterproto.Message):
    leaderboards: List["CMsgDotaLeaderboardsRegionLeaderboard"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaLeaderboardsRegionLeaderboard(betterproto.Message):
    division: int = betterproto.uint32_field(1)
    account_ids: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaCreateFantasyLeagueRequest(betterproto.Message):
    league_name: str = betterproto.string_field(1)
    league_logo: int = betterproto.uint64_field(2)
    selection_mode: "FantasySelectionMode" = betterproto.enum_field(3)
    team_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotaCreateFantasyLeagueResponse(betterproto.Message):
    result: "CMsgDotaCreateFantasyLeagueResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgFantasyLeagueScoring(betterproto.Message):
    level: float = betterproto.float_field(1)
    kills: float = betterproto.float_field(2)
    deaths: float = betterproto.float_field(3)
    assists: float = betterproto.float_field(4)
    last_hits: float = betterproto.float_field(5)
    denies: float = betterproto.float_field(6)
    gpm: float = betterproto.float_field(7)
    xppm: float = betterproto.float_field(8)
    stuns: float = betterproto.float_field(9)
    healing: float = betterproto.float_field(10)
    tower_kills: float = betterproto.float_field(11)
    roshan_kills: float = betterproto.float_field(12)
    multiplier_premium: float = betterproto.float_field(13)
    multiplier_professional: float = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueInfo(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    commissioner_account_id: int = betterproto.uint32_field(2)
    fantasy_league_name: str = betterproto.string_field(3)
    selection_mode: "FantasySelectionMode" = betterproto.enum_field(4)
    team_count: int = betterproto.uint32_field(5)
    logo: int = betterproto.uint64_field(6)
    scoring: "CMsgFantasyLeagueScoring" = betterproto.message_field(7)
    draft_time: int = betterproto.uint32_field(12)
    draft_pick_time: int = betterproto.uint32_field(13)
    season_start: int = betterproto.uint32_field(15)
    season_length: int = betterproto.uint32_field(16)
    veto_votes: int = betterproto.uint32_field(17)
    acquisitions: int = betterproto.uint32_field(18)
    slot_1: int = betterproto.uint32_field(19)
    slot_2: int = betterproto.uint32_field(20)
    slot_3: int = betterproto.uint32_field(21)
    slot_4: int = betterproto.uint32_field(22)
    slot_5: int = betterproto.uint32_field(23)
    bench_slots: int = betterproto.uint32_field(24)
    owner_info: List["CMsgDotaFantasyLeagueInfoOwnerInfo"] = betterproto.message_field(25)
    players: List[int] = betterproto.uint32_field(26)
    time_zone: int = betterproto.uint32_field(27)
    season: int = betterproto.uint32_field(28)
    password: str = betterproto.string_field(29)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueInfoOwnerInfo(betterproto.Message):
    owner_account_id: int = betterproto.uint32_field(1)
    left_league: bool = betterproto.bool_field(2)
    player_account_id: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueEditInfoRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    edit_info: "CMsgDotaFantasyLeagueInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueEditInfoResponse(betterproto.Message):
    result: "CMsgDotaFantasyLeagueEditInfoResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueFindRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    password: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueFindResponse(betterproto.Message):
    result: "CMsgDotaFantasyLeagueFindResponseEResult" = betterproto.enum_field(1)
    fantasy_league_name: str = betterproto.string_field(2)
    commissioner_name: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueInfoRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueInfoResponse(betterproto.Message):
    result: "CMsgDotaFantasyLeagueInfoResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueMatchupsRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueMatchupsResponse(betterproto.Message):
    result: "CMsgDotaFantasyLeagueMatchupsResponseEResult" = betterproto.enum_field(1)
    fantasy_league_id: int = betterproto.uint32_field(2)
    weekly_matchups: List["CMsgDotaFantasyLeagueMatchupsResponseWeeklyMatchups"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueMatchupsResponseMatchup(betterproto.Message):
    owner_account_id_1: int = betterproto.uint32_field(1)
    owner_account_id_2: int = betterproto.uint32_field(2)
    score_1: float = betterproto.float_field(3)
    score_2: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueMatchupsResponseWeeklyMatchups(betterproto.Message):
    matchup: List["CMsgDotaFantasyLeagueMatchupsResponseMatchup"] = betterproto.message_field(1)
    start_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaEditFantasyTeamRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    team_index: int = betterproto.uint32_field(2)
    team_name: str = betterproto.string_field(3)
    team_logo: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotaEditFantasyTeamResponse(betterproto.Message):
    result: "CMsgDotaEditFantasyTeamResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamInfoRequestByFantasyLeagueId(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamInfoRequestByOwnerAccountId(betterproto.Message):
    owner_account_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamInfoResponse(betterproto.Message):
    results: List["CMsgDotaFantasyTeamInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamInfo(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    owner_account_id: int = betterproto.uint32_field(2)
    fantasy_team_index: int = betterproto.uint32_field(3)
    team_name: str = betterproto.string_field(4)
    team_logo: int = betterproto.uint64_field(5)
    wins: int = betterproto.uint32_field(6)
    losses: int = betterproto.uint32_field(7)
    current_roster: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamScoreRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    owner_account_id: int = betterproto.uint32_field(2)
    fantasy_team_index: int = betterproto.uint32_field(3)
    filter_match_id: int = betterproto.uint64_field(4)
    filter_start_time: int = betterproto.uint32_field(5)
    filter_end_time: int = betterproto.uint32_field(6)
    include_bench: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamScoreResponse(betterproto.Message):
    result: "CMsgDotaFantasyTeamScoreResponseEResult" = betterproto.enum_field(1)
    fantasy_team_score: float = betterproto.float_field(2)
    fantasy_player_score: List["CMsgDotaFantasyTeamScoreResponseCMsgPlayerScore"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamScoreResponseCMsgPlayerScore(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    score: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamStandingsRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)
    filter_start_time: int = betterproto.uint32_field(3)
    filter_end_time: int = betterproto.uint32_field(4)
    filter_match_id: int = betterproto.uint64_field(5)
    filter_last_match: bool = betterproto.bool_field(6)
    filter_in_hall: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamStandingsResponse(betterproto.Message):
    result: "CMsgDotaFantasyTeamStandingsResponseEResult" = betterproto.enum_field(1)
    team_scores: List["CMsgDotaFantasyTeamStandingsResponseCMsgTeamScore"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamStandingsResponseCMsgTeamScore(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    owner_account_id: int = betterproto.uint32_field(2)
    fantasy_team_index: int = betterproto.uint32_field(3)
    fantasy_team_logo: int = betterproto.uint64_field(4)
    owner_name: str = betterproto.string_field(5)
    fantasy_team_name: str = betterproto.string_field(6)
    score: float = betterproto.float_field(7)
    score_against: float = betterproto.float_field(8)
    wins: int = betterproto.uint32_field(9)
    losses: int = betterproto.uint32_field(10)
    streak: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerScoreRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    player_account_id: int = betterproto.uint32_field(2)
    filter_start_time: int = betterproto.uint32_field(3)
    filter_end_time: int = betterproto.uint32_field(4)
    filter_match_id: int = betterproto.uint64_field(5)
    filter_last_match: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerScoreResponse(betterproto.Message):
    result: "CMsgDotaFantasyPlayerScoreResponseEResult" = betterproto.enum_field(1)
    fantasy_league_id: int = betterproto.uint32_field(2)
    player_account_id: int = betterproto.uint32_field(3)
    player_name: str = betterproto.string_field(4)
    score: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerStandingsRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)
    role: int = betterproto.uint32_field(3)
    filter_start_time: int = betterproto.uint32_field(4)
    filter_end_time: int = betterproto.uint32_field(5)
    filter_match_id: int = betterproto.uint64_field(6)
    filter_last_match: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerStandingsResponse(betterproto.Message):
    result: "CMsgDotaFantasyPlayerStandingsResponseEResult" = betterproto.enum_field(1)
    fantasy_league_id: int = betterproto.uint32_field(2)
    role: int = betterproto.uint32_field(3)
    player_scores: List["CMsgDotaFantasyPlayerStandingsResponseCMsgPlayerScore"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerStandingsResponseCMsgPlayerScore(betterproto.Message):
    player_account_id: int = betterproto.uint32_field(1)
    player_name: str = betterproto.string_field(2)
    score: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueCreateRequest(betterproto.Message):
    season_id: int = betterproto.uint32_field(1)
    fantasy_league_name: str = betterproto.string_field(2)
    password: str = betterproto.string_field(3)
    team_name: str = betterproto.string_field(4)
    logo: int = betterproto.uint64_field(5)
    ticket_item_id: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueCreateResponse(betterproto.Message):
    result: "CMsgDotaFantasyLeagueCreateResponseEResult" = betterproto.enum_field(1)
    fantasy_league_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamCreateRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    password: str = betterproto.string_field(2)
    team_name: str = betterproto.string_field(3)
    logo: int = betterproto.uint64_field(4)
    ticket_item_id: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamCreateResponse(betterproto.Message):
    result: "CMsgDotaFantasyTeamCreateResponseEResult" = betterproto.enum_field(1)
    fantasy_team_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueEditInvitesRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    password: str = betterproto.string_field(2)
    invite_change: List["CMsgDotaFantasyLeagueEditInvitesRequestInviteChange"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueEditInvitesRequestInviteChange(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    invited: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueEditInvitesResponse(betterproto.Message):
    result: "CMsgDotaFantasyLeagueEditInvitesResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueDraftStatusRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueDraftStatus(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    draft_order: List[int] = betterproto.uint32_field(2)
    current_pick: int = betterproto.uint32_field(3)
    time_remaining: int = betterproto.uint32_field(4)
    pending_resume: bool = betterproto.bool_field(5)
    completed: bool = betterproto.bool_field(6)
    available_players: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueDraftPlayerRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    team_index: int = betterproto.uint32_field(2)
    player_account_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeagueDraftPlayerResponse(betterproto.Message):
    result: "CMsgDotaFantasyLeagueDraftPlayerResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamRosterSwapRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    team_index: int = betterproto.uint32_field(2)
    timestamp: int = betterproto.uint32_field(3)
    slot_1: int = betterproto.uint32_field(4)
    slot_2: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamRosterSwapResponse(betterproto.Message):
    result: "CMsgDotaFantasyTeamRosterSwapResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamRosterAddDropRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    team_index: int = betterproto.uint32_field(2)
    add_account_id: int = betterproto.uint32_field(5)
    drop_account_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamRosterAddDropResponse(betterproto.Message):
    result: "CMsgDotaFantasyTeamRosterAddDropResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamTradesRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamTradesResponse(betterproto.Message):
    result: "CMsgDotaFantasyTeamTradesResponseEResult" = betterproto.enum_field(1)
    trades: List["CMsgDotaFantasyTeamTradesResponseTrade"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamTradesResponseTrade(betterproto.Message):
    timestamp: int = betterproto.uint32_field(1)
    owner_account_id_1: int = betterproto.uint32_field(2)
    owner_account_id_2: int = betterproto.uint32_field(3)
    player_account_id_1: int = betterproto.uint32_field(4)
    player_account_id_2: int = betterproto.uint32_field(5)
    status: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamTradeCancelRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    team_index_1: int = betterproto.uint32_field(3)
    owner_account_id_2: int = betterproto.uint32_field(4)
    team_index_2: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamTradeCancelResponse(betterproto.Message):
    result: "CMsgDotaFantasyTeamTradeCancelResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamRosterRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    team_index: int = betterproto.uint32_field(2)
    owner_account_id: int = betterproto.uint32_field(3)
    timestamp: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyTeamRosterResponse(betterproto.Message):
    result: "CMsgDotaFantasyTeamRosterResponseEResult" = betterproto.enum_field(1)
    player_account_ids: List[int] = betterproto.uint32_field(2)
    player_locked: List[bool] = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerHisoricalStatsRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerHisoricalStatsResponse(betterproto.Message):
    result: "CMsgDotaFantasyPlayerHisoricalStatsResponseEResult" = betterproto.enum_field(1)
    stats: List["CMsgDotaFantasyPlayerHisoricalStatsResponsePlayerStats"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerHisoricalStatsResponsePlayerScoreAccumulator(betterproto.Message):
    matches: int = betterproto.uint32_field(1)
    levels: float = betterproto.float_field(2)
    kills: float = betterproto.float_field(3)
    deaths: float = betterproto.float_field(4)
    assists: float = betterproto.float_field(5)
    last_hits: float = betterproto.float_field(6)
    denies: float = betterproto.float_field(7)
    gpm: float = betterproto.float_field(8)
    xppm: float = betterproto.float_field(9)
    stuns: float = betterproto.float_field(10)
    healing: float = betterproto.float_field(11)
    tower_kills: float = betterproto.float_field(12)
    roshan_kills: float = betterproto.float_field(13)
    score: float = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerHisoricalStatsResponsePlayerStats(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    weeks: int = betterproto.uint32_field(2)
    stats_premium: "CMsgDotaFantasyPlayerHisoricalStatsResponsePlayerScoreAccumulator" = betterproto.message_field(4)
    stats_professional: "CMsgDotaFantasyPlayerHisoricalStatsResponsePlayerScoreAccumulator" = betterproto.message_field(
        5
    )


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyMessageAdd(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    message: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyMessagesRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    start_message: int = betterproto.uint32_field(2)
    end_message: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyMessagesResponse(betterproto.Message):
    result: "CMsgDotaFantasyMessagesResponseEResult" = betterproto.enum_field(1)
    messages: List["CMsgDotaFantasyMessagesResponseMessage"] = betterproto.message_field(2)
    num_total_messages: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyMessagesResponseMessage(betterproto.Message):
    message_id: int = betterproto.uint32_field(1)
    message: str = betterproto.string_field(2)
    author_account_id: int = betterproto.uint32_field(3)
    time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyRemoveOwner(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    owner_account_id: int = betterproto.uint32_field(2)
    team_index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyRemoveOwnerResponse(betterproto.Message):
    result: "CMsgDotaFantasyRemoveOwnerResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyScheduledMatchesRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyScheduledMatchesResponse(betterproto.Message):
    result: "CMsgDotaFantasyScheduledMatchesResponseEResult" = betterproto.enum_field(1)
    scheduled_match_days: List["CMsgDotaFantasyScheduledMatchesResponseScheduledMatchDays"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyScheduledMatchesResponseScheduledMatchDays(betterproto.Message):
    timestamp: int = betterproto.uint32_field(1)
    team_ids: List[int] = betterproto.uint32_field(2)
    league_ids: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeaveLeagueRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    fantasy_team_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyLeaveLeagueResponse(betterproto.Message):
    result: "CMsgDotaFantasyLeaveLeagueResponseEResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerScoreDetailsRequest(betterproto.Message):
    fantasy_league_id: int = betterproto.uint32_field(1)
    player_account_id: int = betterproto.uint32_field(2)
    start_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerScoreDetailsResponse(betterproto.Message):
    result: "CMsgDotaFantasyPlayerScoreDetailsResponseEResult" = betterproto.enum_field(1)
    data: List["CMsgDotaFantasyPlayerScoreDetailsResponsePlayerMatchData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyPlayerScoreDetailsResponsePlayerMatchData(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    series_id: int = betterproto.uint32_field(2)
    series_num: int = betterproto.uint32_field(3)
    series_type: int = betterproto.uint32_field(4)
    league_tier: int = betterproto.uint32_field(5)
    league_id: int = betterproto.uint32_field(6)
    opposing_team_id: int = betterproto.uint32_field(7)
    opposing_team_logo: int = betterproto.uint64_field(8)
    opposing_team_name: str = betterproto.string_field(9)
    owned_by: int = betterproto.uint32_field(11)
    benched: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class CMsgDotaPassportVoteTeamGuess(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    winner_id: int = betterproto.uint32_field(2)
    runnerup_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CMsgDotaPassportVoteGenericSelection(betterproto.Message):
    selection_index: "Dota2013PassportSelectionIndices" = betterproto.enum_field(1)
    selection: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaPassportStampedPlayer(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)
    stamp_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgDotaPassportPlayerCardChallenge(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaPassportVote(betterproto.Message):
    team_votes: List["CMsgDotaPassportVoteTeamGuess"] = betterproto.message_field(1)
    generic_selections: List["CMsgDotaPassportVoteGenericSelection"] = betterproto.message_field(2)
    stamped_players: List["CMsgDotaPassportStampedPlayer"] = betterproto.message_field(3)
    player_card_challenges: List["CMsgDotaPassportPlayerCardChallenge"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CMsgClientToGcGetPlayerCardRosterRequest(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    timestamp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CMsgClientToGcGetPlayerCardRosterResponse(betterproto.Message):
    result: "CMsgClientToGcGetPlayerCardRosterResponseResult" = betterproto.enum_field(1)
    player_card_item_id: List[int] = betterproto.uint64_field(2)
    score: float = betterproto.float_field(3)
    finalized: bool = betterproto.bool_field(4)
    percentile: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class CMsgClientToGcSetPlayerCardRosterRequest(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    timestamp: int = betterproto.uint32_field(2)
    slot: int = betterproto.uint32_field(3)
    player_card_item_id: int = betterproto.uint64_field(4)
    event_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CMsgClientToGcSetPlayerCardRosterResponse(betterproto.Message):
    result: "CMsgClientToGcSetPlayerCardRosterResponseResult" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyDpcLeagueStatus(betterproto.Message):
    league_infos: List["CMsgDotaFantasyDpcLeagueStatusLeagueInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CMsgDotaFantasyDpcLeagueStatusLeagueInfo(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    league_name: str = betterproto.string_field(2)
    start_timestamp: int = betterproto.uint32_field(3)
    end_timestamp: int = betterproto.uint32_field(4)
    day_timestamps: List[int] = betterproto.uint32_field(5)
    status: "CMsgDotaFantasyDpcLeagueStatusERosterStatus" = betterproto.enum_field(8)
