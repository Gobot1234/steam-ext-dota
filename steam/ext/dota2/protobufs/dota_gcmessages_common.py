# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_gcmessages_common.proto
# plugin: python-betterproto

from dataclasses import dataclass
from typing import List

import betterproto

from steam.ext.dota2.protobufs.gcsdk_gcmessages import PartnerAccountType

from steam.ext.dota2.protobufs.dota_shared_enums import EEvent


class ESpecialPingValue(betterproto.Enum):
    NoData = 16382
    Failed = 16383


class EDOTAGCSessionNeed(betterproto.Enum):
    Unknown = 0
    UserNoSessionNeeded = 100
    UserInOnlineGame = 101
    UserInLocalGame = 102
    UserInUIWasConnected = 103
    UserInUINeverConnected = 104
    UserTutorials = 105
    UserInUIWasConnectedIdle = 106
    UserInUINeverConnectedIdle = 107
    GameServerOnline = 200
    GameServerLocal = 201
    GameServerIdle = 202
    GameServerRelay = 203
    GameServerLocalUpload = 204


class DOTATournamentEvents(betterproto.Enum):
    FirstBlood = 0
    GameEnd = 1
    MultiKill = 2
    HeroDeny = 3
    AegisDeny = 4
    AegisStolen = 5
    Godlike = 6
    CourierKill = 7
    Echoslam = 8
    Rapier = 9
    EarlyRoshan = 10
    BlackHole = 11


class EBroadcastTimelineEvent(betterproto.Enum):
    MatchStarted = 1
    GameStateChanged = 2
    TowerDeath = 3
    BarracksDeath = 4
    AncientDeath = 5
    RoshanDeath = 6
    HeroDeath = 7
    TeamFight = 8
    FirstBlood = 9


class ECustomGameWhitelistState(betterproto.Enum):
    Unknown = 0
    Approved = 1
    Rejected = 2


class EDOTATriviaQuestionCategory(betterproto.Enum):
    AbilityIcon = 0
    AbilityCooldown = 1
    HeroAttributes = 2
    HeroMovementSpeed = 3
    TalentTree = 4
    HeroStats = 5
    ItemPrice = 6
    AbilitySound = 7
    InvokerSpells = 8
    AbilityManaCost = 9
    HeroAttackSound = 10
    AbilityName = 11
    ItemComponents = 12
    ItemLore = 13
    ItemPassives = 14


class CMsgDOTAProfileCardEStatID(betterproto.Enum):
    CoreRank = 1
    SupportRank = 2
    Wins = 3
    Commends = 4
    GamesPlayed = 5
    FirstMatchDate = 6
    PreviousSeasonRank = 7
    GamesMVP = 8


class CMsgGCRerollPlayerChallengeResponseEResult(betterproto.Enum):
    Success = 0
    Dropped = 1
    NotFound = 2
    CantReroll = 3
    ServerError = 4


class CMsgDOTARealtimeGameStatsCMsgDOTARealtimeGameStatsGraphDataeStat(betterproto.Enum):
    CreepGoldEarned = 0
    KillGoldEarned = 1
    DeathAndBuybackGoldLost = 2
    XPEarned = 3


class CMsgDOTARealtimeGameStatsCMsgDOTARealtimeGameStatsGraphDataeLocation(betterproto.Enum):
    BotLane = 0
    MidLane = 1
    TopLane = 2
    Jungle = 3
    Ancients = 4
    Other = 5


class CMsgDOTASeasonRewardsERewardType(betterproto.Enum):
    EconItem = 0
    MysteryWheel = 1
    AbilityEffect = 2
    Other = 3
    MysteryWheelPointsBased = 4


class CMsgDOTASeasonPredictionsePredictionType(betterproto.Enum):
    Generic = 0
    Hero = 1
    Team = 2
    Player = 3
    Special = 4
    YesNo = 5
    QualifiersTeam = 6


class CMsgDOTASeasonPredictionseAnswerType(betterproto.Enum):
    SingleInt = 0
    SingleFloat = 1
    MultipleInt = 2
    MultipleFloat = 3
    AnswerTeam = 4
    SingleTime = 5
    MultipleTime = 6
    NoAnswer = 7


class CMsgDOTASeasonPredictionseResolutionTypeT(betterproto.Enum):
    InvalidQuery = 0
    FirstToPassQuery = 1
    LastToPassQuery = 2
    LastRemainingQuery = 3
    MaxToPassQuery = 4
    MinToPassQuery = 5
    SumQuery = 6
    MaxTeamSumToPassQuery = 7
    MinTeamSumToPassQuery = 8


class CMsgDOTASeasonPredictionseRandomSelectionGroupT(betterproto.Enum):
    EarlyGame = 0
    MidGame = 1
    LateGame = 2
    Count = 3


class CMsgDOTASeasonPredictionseRawValueTypeT(betterproto.Enum):
    Number = 0
    Time = 1


class CMsgDOTAMatchReplayState(betterproto.Enum):
    REPLAY_AVAILABLE = 0
    REPLAY_NOT_RECORDED = 1
    REPLAY_EXPIRED = 2


class CMsgDOTAMatchCMsgDOTAMatchPlayerHeroDamageType(betterproto.Enum):
    HERO_DAMAGE_PHYSICAL = 0
    HERO_DAMAGE_MAGICAL = 1
    HERO_DAMAGE_PURE = 2


class CMsgRequestPlayerRecentAccomplishmentsResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3


@dataclass
class CSODOTAGameAccountClient(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    wins: int = betterproto.uint32_field(3)
    losses: int = betterproto.uint32_field(4)
    xp: int = betterproto.uint32_field(12)
    level: int = betterproto.uint32_field(13)
    initial_skill: int = betterproto.uint32_field(14)
    leaver_count: int = betterproto.uint32_field(15)
    secondary_leaver_count: int = betterproto.uint32_field(58)
    low_priority_until_date: int = betterproto.uint32_field(18)
    prevent_text_chat_until_date: int = betterproto.uint32_field(20)
    prevent_voice_until_date: int = betterproto.uint32_field(21)
    prevent_public_text_chat_until_date: int = betterproto.uint32_field(86)
    last_abandoned_game_date: int = betterproto.uint32_field(22)
    last_secondary_abandoned_game_date: int = betterproto.uint32_field(59)
    leaver_penalty_count: int = betterproto.uint32_field(23)
    completed_game_streak: int = betterproto.uint32_field(24)
    account_disabled_until_date: int = betterproto.uint32_field(38)
    account_disabled_count: int = betterproto.uint32_field(39)
    match_disabled_until_date: int = betterproto.uint32_field(41)
    match_disabled_count: int = betterproto.uint32_field(42)
    partner_account_type: "PartnerAccountType" = betterproto.enum_field(44)
    partner_account_state: int = betterproto.uint32_field(45)
    shutdownlawterminatetimestamp: int = betterproto.uint32_field(47)
    low_priority_games_remaining: int = betterproto.uint32_field(48)
    competitive_rank: int = betterproto.uint32_field(49)
    competitive_calibration_games_remaining: int = betterproto.uint32_field(51)
    solo_competitive_2019_rank: int = betterproto.uint32_field(52)
    solo_competitive_2019_calibration_games_remaining: int = betterproto.uint32_field(54)
    recruitment_level: int = betterproto.uint32_field(55)
    has_new_notifications: bool = betterproto.bool_field(56)
    is_league_admin: bool = betterproto.bool_field(57)
    casual_games_played: int = betterproto.uint32_field(60)
    solo_competitive_games_played: int = betterproto.uint32_field(61)
    party_competitive_games_played: int = betterproto.uint32_field(62)
    casual_1v1_games_played: int = betterproto.uint32_field(65)
    curr_all_hero_challenge_id: int = betterproto.uint32_field(67)
    play_time_points: int = betterproto.uint32_field(68)
    account_flags: int = betterproto.uint32_field(69)
    play_time_level: int = betterproto.uint32_field(70)
    player_behavior_seq_num_last_report: int = betterproto.uint32_field(71)
    player_behavior_score_last_report: int = betterproto.uint32_field(72)
    player_behavior_report_old_data: bool = betterproto.bool_field(73)
    tourney_skill_level: int = betterproto.uint32_field(74)
    tourney_recent_participation_date: int = betterproto.uint32_field(85)
    favorite_team: int = betterproto.uint32_field(87)
    anchored_phone_number_id: int = betterproto.uint64_field(88)
    ranked_matchmaking_ban_until_date: int = betterproto.uint32_field(89)
    recent_game_time_1: int = betterproto.uint32_field(90)
    recent_game_time_2: int = betterproto.uint32_field(91)
    recent_game_time_3: int = betterproto.uint32_field(92)
    general_seasonal_ranked_rank: int = betterproto.uint32_field(93)
    general_seasonal_ranked_calibration_games_remaining: int = betterproto.uint32_field(94)
    general_seasonal_ranked_games_played: int = betterproto.uint32_field(95)
    general_seasonal_ranked_rank_peak: int = betterproto.uint32_field(96)
    general_seasonal_rank_transferred: bool = betterproto.bool_field(97)
    solo_seasonal_ranked_rank: int = betterproto.uint32_field(98)
    solo_seasonal_ranked_calibration_games_remaining: int = betterproto.uint32_field(99)
    solo_seasonal_ranked_games_played: int = betterproto.uint32_field(100)
    solo_seasonal_ranked_rank_peak: int = betterproto.uint32_field(101)
    solo_seasonal_rank_transferred: bool = betterproto.bool_field(102)
    favorite_team_packed: int = betterproto.uint64_field(103)
    recent_report_time: int = betterproto.uint32_field(104)
    custom_game_disabled_until_date: int = betterproto.uint32_field(105)
    recent_win_time_1: int = betterproto.uint32_field(106)
    recent_win_time_2: int = betterproto.uint32_field(107)
    recent_win_time_3: int = betterproto.uint32_field(108)
    coach_rating: int = betterproto.uint32_field(109)
    competitive_core_rank: int = betterproto.uint32_field(110)
    competitive_core_calibration_games_remaining: int = betterproto.uint32_field(111)
    competitive_support_rank: int = betterproto.uint32_field(112)
    competitive_support_calibration_games_remaining: int = betterproto.uint32_field(113)
    queue_points: int = betterproto.uint32_field(114)
    role_handicaps: List["CSODOTAGameAccountClientRoleHandicap"] = betterproto.message_field(115)
    gauntlet_tier: int = betterproto.uint32_field(116)
    gauntlet_wins: int = betterproto.uint32_field(117)
    gauntlet_losses: int = betterproto.uint32_field(118)
    gauntlet_recent_time: int = betterproto.uint32_field(119)
    event_mode_recent_time: int = betterproto.uint32_field(120)


@dataclass
class CSODOTAGameAccountClientRoleHandicap(betterproto.Message):
    role: int = betterproto.uint32_field(1)
    handicap: float = betterproto.float_field(2)


@dataclass
class CSODOTAGameAccountPlus(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    original_start_date: int = betterproto.uint32_field(2)
    plus_flags: int = betterproto.uint32_field(3)
    plus_status: int = betterproto.uint32_field(4)
    prepaid_time_start: int = betterproto.uint32_field(5)
    prepaid_time_balance: int = betterproto.uint32_field(6)
    next_payment_date: float = betterproto.fixed32_field(7)
    steam_agreement_id: float = betterproto.fixed64_field(8)


@dataclass
class CMsgLobbyPlayerPlusSubscriptionData(betterproto.Message):
    hero_badges: List["CMsgLobbyPlayerPlusSubscriptionDataHeroBadge"] = betterproto.message_field(1)


@dataclass
class CMsgLobbyPlayerPlusSubscriptionDataHeroBadge(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    hero_badge_xp: int = betterproto.uint32_field(2)


@dataclass
class CMsgLobbyEventPoints(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    account_points: List["CMsgLobbyEventPointsAccountPoints"] = betterproto.message_field(2)


@dataclass
class CMsgLobbyEventPointsChatWheelMessageRange(betterproto.Message):
    message_id_start: int = betterproto.uint32_field(1)
    message_id_end: int = betterproto.uint32_field(2)


@dataclass
class CMsgLobbyEventPointsPingWheelMessageRange(betterproto.Message):
    message_id_start: int = betterproto.uint32_field(1)
    message_id_end: int = betterproto.uint32_field(2)


@dataclass
class CMsgLobbyEventPointsPeriodicResourceValues(betterproto.Message):
    remaining: int = betterproto.uint32_field(1)
    max: int = betterproto.uint32_field(2)


@dataclass
class CMsgLobbyEventPointsEventGameCustomActions(betterproto.Message):
    action_id: int = betterproto.uint32_field(1)
    times_granted: int = betterproto.uint32_field(2)


@dataclass
class CMsgLobbyEventPointsAccountPoints(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    normal_points: int = betterproto.uint32_field(2)
    premium_points: int = betterproto.uint32_field(3)
    owned: bool = betterproto.bool_field(4)
    favorite_team: int = betterproto.uint32_field(5)
    favorite_team_level: int = betterproto.uint32_field(6)
    favorite_team_foil_level: int = betterproto.uint32_field(9)
    active_effects_mask: int = betterproto.uint64_field(12)
    unlocked_chat_wheel_message_ranges: List["CMsgLobbyEventPointsChatWheelMessageRange"] = betterproto.message_field(
        13
    )
    plus_subscription_data: "CMsgLobbyPlayerPlusSubscriptionData" = betterproto.message_field(16)
    wager_tokens: "CMsgLobbyEventPointsPeriodicResourceValues" = betterproto.message_field(17)
    rank_wager_tokens: "CMsgLobbyEventPointsPeriodicResourceValues" = betterproto.message_field(18)
    tip_tokens: "CMsgLobbyEventPointsPeriodicResourceValues" = betterproto.message_field(19)
    periodic_point_adjustments: "CMsgLobbyEventPointsPeriodicResourceValues" = betterproto.message_field(21)
    unlocked_ping_wheel_message_ranges: List["CMsgLobbyEventPointsPingWheelMessageRange"] = betterproto.message_field(
        22
    )
    wager_streak: int = betterproto.uint32_field(23)
    bounties: "CMsgLobbyEventPointsPeriodicResourceValues" = betterproto.message_field(24)
    event_game_custom_actions: List["CMsgLobbyEventPointsEventGameCustomActions"] = betterproto.message_field(25)
    tip_amount_index: int = betterproto.uint32_field(26)


@dataclass
class CMsgLobbyEventGameData(betterproto.Message):
    game_seed: int = betterproto.uint32_field(1)
    event_window_start_time: int = betterproto.uint32_field(2)


@dataclass
class CMsgLobbyGauntletProgress(betterproto.Message):
    accounts: List["CMsgLobbyGauntletProgressAccountProgress"] = betterproto.message_field(1)


@dataclass
class CMsgLobbyGauntletProgressAccountProgress(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    gauntlet_tier: int = betterproto.uint32_field(3)
    gauntlet_wins: int = betterproto.uint32_field(4)
    gauntlet_losses: int = betterproto.uint32_field(5)


@dataclass
class CMsgLocalServerGuildData(betterproto.Message):
    guild_id: int = betterproto.uint32_field(1)
    event_id: "EEvent" = betterproto.enum_field(2)
    guild_points: int = betterproto.uint32_field(3)
    guild_logo: int = betterproto.uint64_field(4)
    guild_primary_color: int = betterproto.uint32_field(5)
    guild_secondary_color: int = betterproto.uint32_field(6)
    guild_pattern: int = betterproto.uint32_field(7)
    guild_flags: int = betterproto.uint32_field(8)


@dataclass
class CMsgLocalServerFakeLobbyData(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    event_points: List["CMsgLobbyEventPoints"] = betterproto.message_field(2)
    is_plus_subscriber: bool = betterproto.bool_field(3)
    primary_event_id: int = betterproto.uint32_field(4)
    favorite_team: int = betterproto.uint32_field(5)
    favorite_team_quality: int = betterproto.uint32_field(6)
    guild_info: "CMsgLocalServerGuildData" = betterproto.message_field(7)


@dataclass
class CMsgBattleCupVictory(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    win_date: int = betterproto.uint32_field(2)
    valid_until: int = betterproto.uint32_field(3)
    skill_level: int = betterproto.uint32_field(4)
    tournament_id: int = betterproto.uint32_field(5)
    division_id: int = betterproto.uint32_field(6)
    team_id: int = betterproto.uint32_field(7)
    streak: int = betterproto.uint32_field(8)
    trophy_id: int = betterproto.uint32_field(9)


@dataclass
class CMsgLobbyBattleCupVictoryList(betterproto.Message):
    winners: List["CMsgBattleCupVictory"] = betterproto.message_field(1)


@dataclass
class CMsgDOTABroadcastNotification(betterproto.Message):
    message: str = betterproto.string_field(1)


@dataclass
class CProtoItemHeroStatue(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    status_effect_index: int = betterproto.uint32_field(2)
    sequence_name: str = betterproto.string_field(3)
    cycle: float = betterproto.float_field(4)
    wearable: List[int] = betterproto.uint32_field(5)
    inscription: str = betterproto.string_field(6)
    style: List[int] = betterproto.uint32_field(7)
    tournament_drop: bool = betterproto.bool_field(8)


@dataclass
class CProtoItemTeamShowcase(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    status_effect_index: int = betterproto.uint32_field(2)
    sequence_name: str = betterproto.string_field(3)
    cycle: float = betterproto.float_field(4)
    wearable: List[int] = betterproto.uint32_field(5)
    inscription: str = betterproto.string_field(6)
    style: List[int] = betterproto.uint32_field(7)


@dataclass
class CMatchPlayerAbilityUpgrade(betterproto.Message):
    ability: int = betterproto.uint32_field(1)
    time: int = betterproto.uint32_field(2)


@dataclass
class CMatchPlayerTimedStats(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    kills: int = betterproto.uint32_field(2)
    deaths: int = betterproto.uint32_field(3)
    assists: int = betterproto.uint32_field(4)
    net_worth: int = betterproto.uint32_field(5)
    xp: int = betterproto.uint32_field(6)
    last_hits: int = betterproto.uint32_field(7)
    denies: int = betterproto.uint32_field(8)
    bounty_rune_gold: int = betterproto.uint32_field(9)
    range_creep_upgrade_gold: int = betterproto.uint32_field(10)
    observer_wards_dewarded: int = betterproto.uint32_field(11)
    reliable_gold_earned: int = betterproto.uint32_field(12)
    gold_loss_prevented: int = betterproto.uint32_field(13)
    hero_kill_gold: int = betterproto.uint32_field(14)
    creep_kill_gold: int = betterproto.uint32_field(15)
    building_gold: int = betterproto.uint32_field(16)
    other_gold: int = betterproto.uint32_field(17)
    comeback_gold: int = betterproto.uint32_field(18)
    experimental_gold: int = betterproto.uint32_field(19)
    experimental2_gold: int = betterproto.uint32_field(20)
    creep_deny_gold: int = betterproto.uint32_field(21)
    tp_scrolls_purchased_1: int = betterproto.uint32_field(22)
    tp_scrolls_purchased_2: int = betterproto.uint32_field(23)
    tp_scrolls_purchased_3: int = betterproto.uint32_field(24)
    tp_scrolls_purchased_4: int = betterproto.uint32_field(25)
    tp_scrolls_purchased_5: int = betterproto.uint32_field(26)
    neutral_gold: int = betterproto.uint32_field(27)
    courier_gold: int = betterproto.uint32_field(28)
    roshan_gold: int = betterproto.uint32_field(29)
    income_gold: int = betterproto.uint32_field(30)
    custom_stats_1: int = betterproto.uint32_field(31)
    custom_stats_2: int = betterproto.uint32_field(32)
    custom_stats_3: int = betterproto.uint32_field(33)
    custom_stats_4: int = betterproto.uint32_field(34)
    custom_stats_5: int = betterproto.uint32_field(35)
    item_value: int = betterproto.uint32_field(36)
    support_gold_spent: int = betterproto.uint32_field(37)
    camps_stacked: int = betterproto.uint32_field(38)
    wards_placed: int = betterproto.uint32_field(39)
    triple_kills: int = betterproto.uint32_field(40)
    rampages: int = betterproto.uint32_field(41)


@dataclass
class CMatchTeamTimedStats(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    enemy_towers_killed: int = betterproto.uint32_field(2)
    enemy_barracks_killed: int = betterproto.uint32_field(3)


@dataclass
class CMatchAdditionalUnitInventory(betterproto.Message):
    unit_name: str = betterproto.string_field(1)
    items: List[int] = betterproto.uint32_field(2)


@dataclass
class CMatchPlayerPermanentBuff(betterproto.Message):
    permanent_buff: int = betterproto.uint32_field(1)
    stack_count: int = betterproto.uint32_field(2)


@dataclass
class CMatchHeroSelectEvent(betterproto.Message):
    is_pick: bool = betterproto.bool_field(1)
    team: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)


@dataclass
class CPartySearchClientParty(betterproto.Message):
    party_id: float = betterproto.fixed64_field(1)
    beacon_type: int = betterproto.int32_field(2)
    party_members: List[float] = betterproto.fixed32_field(3)


@dataclass
class CMsgDOTAProcessFantasyScheduledEvent(betterproto.Message):
    event: int = betterproto.uint32_field(1)
    timestamp: int = betterproto.uint32_field(2)
    fantasy_league_id: int = betterproto.uint32_field(3)
    season: int = betterproto.uint32_field(4)
    reference_data: int = betterproto.uint32_field(5)


@dataclass
class CMsgDOTAHasItemQuery(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgDOTAHasItemResponse(betterproto.Message):
    has_item: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCIsProQuery(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCIsProResponse(betterproto.Message):
    is_pro: bool = betterproto.bool_field(1)


@dataclass
class CMsgDOTAHasItemDefsQuery(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    itemdef_ids: List[int] = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAHasItemDefsResponse(betterproto.Message):
    has_items: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCGetPlayerCardItemInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    player_card_item_ids: List[int] = betterproto.uint64_field(2)
    all_for_event: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCGetPlayerCardItemInfoResponse(betterproto.Message):
    player_card_infos: List["CMsgGCGetPlayerCardItemInfoResponsePlayerCardInfo"] = betterproto.message_field(1)


@dataclass
class CMsgGCGetPlayerCardItemInfoResponsePlayerCardInfo(betterproto.Message):
    player_card_item_id: int = betterproto.uint64_field(1)
    account_id: int = betterproto.uint32_field(2)
    packed_bonuses: int = betterproto.uint64_field(3)


@dataclass
class CMsgGCToGCFantasySetMatchLeague(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    league_id: int = betterproto.uint32_field(2)


@dataclass
class CSODOTAMapLocationState(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    location_id: int = betterproto.int32_field(2)
    completed: bool = betterproto.bool_field(3)


@dataclass
class CMsgLeagueAdminList(betterproto.Message):
    account_ids: List[int] = betterproto.uint32_field(1)


@dataclass
class CCompendiumTimestampedData(betterproto.Message):
    game_time: int = betterproto.uint32_field(1)
    gpm: int = betterproto.uint32_field(2)
    xpm: int = betterproto.uint32_field(3)
    kills: int = betterproto.uint32_field(4)
    deaths: int = betterproto.uint32_field(5)
    item_purchases: List[int] = betterproto.uint32_field(6)


@dataclass
class CCompendiumGameTimeline(betterproto.Message):
    data: List["CCompendiumTimestampedData"] = betterproto.message_field(1)
    tags: List[str] = betterproto.string_field(2)


@dataclass
class CCompendiumGameList(betterproto.Message):
    games: List["CCompendiumGameTimeline"] = betterproto.message_field(1)


@dataclass
class CAdditionalEquipSlot(betterproto.Message):
    class_id: int = betterproto.uint32_field(1)
    slot_id: int = betterproto.uint32_field(2)
    def_index: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTAProfileCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    background_def_index: int = betterproto.uint32_field(2)
    slots: List["CMsgDOTAProfileCardSlot"] = betterproto.message_field(3)
    badge_points: int = betterproto.uint32_field(4)
    event_points: int = betterproto.uint32_field(5)
    event_id: int = betterproto.uint32_field(6)
    recent_battle_cup_victory: "CMsgBattleCupVictory" = betterproto.message_field(7)
    rank_tier: int = betterproto.uint32_field(8)
    leaderboard_rank: int = betterproto.uint32_field(9)
    is_plus_subscriber: bool = betterproto.bool_field(10)
    plus_original_start_date: int = betterproto.uint32_field(11)
    rank_tier_score: int = betterproto.uint32_field(12)
    previous_rank_tier: int = betterproto.uint32_field(13)
    rank_tier_mmr_type: int = betterproto.uint32_field(14)
    leaderboard_rank_core: int = betterproto.uint32_field(17)
    rank_tier_peak: int = betterproto.uint32_field(21)
    title: int = betterproto.uint32_field(23)



@dataclass
class CMsgDOTAProfileCardSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    trophy: "CMsgDOTAProfileCardSlotTrophy" = betterproto.message_field(2)
    stat: "CMsgDOTAProfileCardSlotStat" = betterproto.message_field(3)
    item: "CMsgDOTAProfileCardSlotItem" = betterproto.message_field(4)
    hero: "CMsgDOTAProfileCardSlotHero" = betterproto.message_field(5)
    emoticon: "CMsgDOTAProfileCardSlotEmoticon" = betterproto.message_field(6)
    team: "CMsgDOTAProfileCardSlotTeam" = betterproto.message_field(7)


@dataclass
class CMsgDOTAProfileCardCMsgDOTAProfileCardSlotTrophy(betterproto.Message):
    trophy_id: int = betterproto.uint32_field(1)
    trophy_score: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAProfileCardCMsgDOTAProfileCardSlotStat(betterproto.Message):
    stat_id: "CMsgDOTAProfileCardEStatID" = betterproto.enum_field(1)
    stat_score: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAProfileCardCMsgDOTAProfileCardSlotItem(betterproto.Message):
    serialized_item: bytes = betterproto.bytes_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgDOTAProfileCardCMsgDOTAProfileCardSlotHero(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    hero_wins: int = betterproto.uint32_field(2)
    hero_losses: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTAProfileCardCMsgDOTAProfileCardSlotEmoticon(betterproto.Message):
    emoticon_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTAProfileCardCMsgDOTAProfileCardSlotTeam(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)


@dataclass
class CSODOTAPlayerChallenge(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)
    slot_id: int = betterproto.uint32_field(3)
    int_param_0: int = betterproto.uint32_field(5)
    int_param_1: int = betterproto.uint32_field(6)
    created_time: int = betterproto.uint32_field(7)
    completed: int = betterproto.uint32_field(8)
    sequence_id: int = betterproto.uint32_field(9)
    challenge_tier: int = betterproto.uint32_field(10)
    flags: int = betterproto.uint32_field(11)
    attempts: int = betterproto.uint32_field(12)
    complete_limit: int = betterproto.uint32_field(13)
    quest_rank: int = betterproto.uint32_field(14)
    max_quest_rank: int = betterproto.uint32_field(15)
    instance_id: int = betterproto.uint32_field(16)
    hero_id: int = betterproto.uint32_field(17)
    template_id: int = betterproto.uint32_field(18)


@dataclass
class CMsgClientToGCRerollPlayerChallenge(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    sequence_id: int = betterproto.uint32_field(3)
    hero_id: int = betterproto.uint32_field(4)


@dataclass
class CMsgGCRerollPlayerChallengeResponse(betterproto.Message):
    result: "CMsgGCRerollPlayerChallengeResponseEResult" = betterproto.enum_field(1)


@dataclass
class CMsgGCTopCustomGamesList(betterproto.Message):
    top_custom_games: List[int] = betterproto.uint64_field(1)
    game_of_the_day: int = betterproto.uint64_field(2)


@dataclass
class CMsgDOTARealtimeGameStats(betterproto.Message):
    match: "CMsgDOTARealtimeGameStatsMatchDetails" = betterproto.message_field(1)
    teams: List["CMsgDOTARealtimeGameStatsTeamDetails"] = betterproto.message_field(2)
    buildings: List["CMsgDOTARealtimeGameStatsBuildingDetails"] = betterproto.message_field(3)
    graph_data: "CMsgDOTARealtimeGameStatsGraphData" = betterproto.message_field(4)
    delta_frame: bool = betterproto.bool_field(5)


@dataclass
class CMsgDOTARealtimeGameStatsTeamDetails(betterproto.Message):
    team_number: int = betterproto.uint32_field(1)
    team_id: int = betterproto.uint32_field(2)
    team_name: str = betterproto.string_field(3)
    team_logo: float = betterproto.fixed64_field(4)
    team_tag: str = betterproto.string_field(10)
    score: int = betterproto.uint32_field(5)
    net_worth: int = betterproto.uint32_field(9)
    players: List["CMsgDOTARealtimeGameStatsPlayerDetails"] = betterproto.message_field(6)
    only_team: bool = betterproto.bool_field(7)
    cheers: int = betterproto.uint32_field(8)
    team_logo_url: str = betterproto.string_field(11)


@dataclass
class CMsgDOTARealtimeGameStatsItemDetails(betterproto.Message):
    item_ability_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    time: int = betterproto.int32_field(3)
    sold: bool = betterproto.bool_field(4)
    stackcount: int = betterproto.uint32_field(5)


@dataclass
class CMsgDOTARealtimeGameStatsAbilityDetails(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    cooldown: float = betterproto.float_field(4)
    cooldown_max: float = betterproto.float_field(5)


@dataclass
class CMsgDOTARealtimeGameStatsHeroToHeroStats(betterproto.Message):
    victimid: int = betterproto.uint32_field(1)
    kills: int = betterproto.uint32_field(2)
    assists: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTARealtimeGameStatsAbilityList(betterproto.Message):
    id: List[int] = betterproto.uint32_field(1)


@dataclass
class CMsgDOTARealtimeGameStatsPlayerDetails(betterproto.Message):
    accountid: int = betterproto.uint32_field(1)
    playerid: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    team: int = betterproto.uint32_field(4)
    heroid: int = betterproto.uint32_field(5)
    healthpoints: int = betterproto.uint32_field(6)
    maxhealthpoints: int = betterproto.uint32_field(7)
    healthregenrate: float = betterproto.float_field(8)
    manapoints: int = betterproto.uint32_field(9)
    maxmanapoints: int = betterproto.uint32_field(10)
    manaregenrate: float = betterproto.float_field(11)
    base_strength: int = betterproto.uint32_field(12)
    base_agility: int = betterproto.uint32_field(13)
    base_intelligence: int = betterproto.uint32_field(14)
    base_armor: int = betterproto.int32_field(15)
    base_movespeed: int = betterproto.uint32_field(16)
    base_damage: int = betterproto.uint32_field(17)
    strength: int = betterproto.uint32_field(18)
    agility: int = betterproto.uint32_field(19)
    intelligence: int = betterproto.uint32_field(20)
    armor: int = betterproto.int32_field(21)
    movespeed: int = betterproto.uint32_field(22)
    damage: int = betterproto.uint32_field(23)
    hero_damage: int = betterproto.uint32_field(24)
    tower_damage: int = betterproto.uint32_field(25)
    abilities: List["CMsgDOTARealtimeGameStatsAbilityDetails"] = betterproto.message_field(26)
    level: int = betterproto.uint32_field(27)
    kill_count: int = betterproto.uint32_field(28)
    death_count: int = betterproto.uint32_field(29)
    assists_count: int = betterproto.uint32_field(30)
    denies_count: int = betterproto.uint32_field(31)
    lh_count: int = betterproto.uint32_field(32)
    hero_healing: int = betterproto.uint32_field(33)
    gold_per_min: int = betterproto.uint32_field(34)
    xp_per_min: int = betterproto.uint32_field(35)
    net_gold: int = betterproto.uint32_field(36)
    gold: int = betterproto.uint32_field(37)
    x: float = betterproto.float_field(38)
    y: float = betterproto.float_field(39)
    respawn_time: int = betterproto.int32_field(40)
    ultimate_cooldown: int = betterproto.uint32_field(41)
    has_buyback: bool = betterproto.bool_field(42)
    items: List["CMsgDOTARealtimeGameStatsItemDetails"] = betterproto.message_field(43)
    stashitems: List["CMsgDOTARealtimeGameStatsItemDetails"] = betterproto.message_field(44)
    itemshoppinglist: List["CMsgDOTARealtimeGameStatsItemDetails"] = betterproto.message_field(45)
    levelpoints: List["CMsgDOTARealtimeGameStatsAbilityList"] = betterproto.message_field(46)
    hero_to_hero_stats: List["CMsgDOTARealtimeGameStatsHeroToHeroStats"] = betterproto.message_field(47)
    has_ultimate: bool = betterproto.bool_field(48)
    has_ultimate_mana: bool = betterproto.bool_field(49)


@dataclass
class CMsgDOTARealtimeGameStatsBuildingDetails(betterproto.Message):
    team: int = betterproto.uint32_field(2)
    heading: float = betterproto.float_field(3)
    lane: int = betterproto.uint32_field(4)
    tier: int = betterproto.uint32_field(5)
    type: int = betterproto.uint32_field(6)
    x: float = betterproto.float_field(7)
    y: float = betterproto.float_field(8)
    destroyed: bool = betterproto.bool_field(9)


@dataclass
class CMsgDOTARealtimeGameStatsKillDetails(betterproto.Message):
    player_id: int = betterproto.uint32_field(1)
    death_time: int = betterproto.int32_field(2)
    killer_player_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTARealtimeGameStatsBroadcasterDetails(betterproto.Message):
    player_id: int = betterproto.uint32_field(1)
    selected_hero: int = betterproto.uint32_field(2)
    selected_graph: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTARealtimeGameStatsPickBanDetails(betterproto.Message):
    hero: int = betterproto.uint32_field(1)
    team: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTARealtimeGameStatsMatchDetails(betterproto.Message):
    server_steam_id: float = betterproto.fixed64_field(1)
    matchid: int = betterproto.uint64_field(2)
    timestamp: int = betterproto.uint32_field(3)
    time_of_day: float = betterproto.float_field(4)
    is_nightstalker_night: bool = betterproto.bool_field(5)
    game_time: int = betterproto.int32_field(6)
    game_state: int = betterproto.uint32_field(19)
    teamid_radiant: int = betterproto.uint32_field(8)
    teamid_dire: int = betterproto.uint32_field(9)
    picks: List["CMsgDOTARealtimeGameStatsPickBanDetails"] = betterproto.message_field(10)
    bans: List["CMsgDOTARealtimeGameStatsPickBanDetails"] = betterproto.message_field(11)
    kills: List["CMsgDOTARealtimeGameStatsKillDetails"] = betterproto.message_field(12)
    broadcasters: List["CMsgDOTARealtimeGameStatsBroadcasterDetails"] = betterproto.message_field(13)
    game_mode: int = betterproto.uint32_field(14)
    league_id: int = betterproto.uint32_field(15)
    league_node_id: int = betterproto.uint32_field(18)
    single_team: bool = betterproto.bool_field(16)
    cheers_peak: int = betterproto.uint32_field(17)


@dataclass
class CMsgDOTARealtimeGameStatsGraphData(betterproto.Message):
    graph_gold: List[int] = betterproto.int32_field(1)
    graph_xp: List[int] = betterproto.int32_field(2)
    graph_kill: List[int] = betterproto.int32_field(3)
    graph_tower: List[int] = betterproto.int32_field(4)
    graph_rax: List[int] = betterproto.int32_field(5)
    team_loc_stats: List["CMsgDOTARealtimeGameStatsGraphDataTeamLocationStats"] = betterproto.message_field(6)


@dataclass
class CMsgDOTARealtimeGameStatsCMsgDOTARealtimeGameStatsGraphDataLocationStats(betterproto.Message):
    stats: List[int] = betterproto.int32_field(1)


@dataclass
class CMsgDOTARealtimeGameStatsCMsgDOTARealtimeGameStatsGraphDataTeamLocationStats(betterproto.Message):
    loc_stats: List["CMsgDOTARealtimeGameStatsGraphDataLocationStats"] = betterproto.message_field(1)


@dataclass
class CMsgDOTARealtimeGameStatsTerse(betterproto.Message):
    match: "CMsgDOTARealtimeGameStatsTerseMatchDetails" = betterproto.message_field(1)
    teams: List["CMsgDOTARealtimeGameStatsTerseTeamDetails"] = betterproto.message_field(2)
    buildings: List["CMsgDOTARealtimeGameStatsTerseBuildingDetails"] = betterproto.message_field(3)
    graph_data: "CMsgDOTARealtimeGameStatsTerseGraphData" = betterproto.message_field(4)
    delta_frame: bool = betterproto.bool_field(5)


@dataclass
class CMsgDOTARealtimeGameStatsTerseTeamDetails(betterproto.Message):
    team_number: int = betterproto.uint32_field(1)
    team_id: int = betterproto.uint32_field(2)
    team_name: str = betterproto.string_field(3)
    team_tag: str = betterproto.string_field(8)
    team_logo: float = betterproto.fixed64_field(4)
    score: int = betterproto.uint32_field(5)
    net_worth: int = betterproto.uint32_field(7)
    team_logo_url: str = betterproto.string_field(9)
    players: List["CMsgDOTARealtimeGameStatsTersePlayerDetails"] = betterproto.message_field(6)


@dataclass
class CMsgDOTARealtimeGameStatsTersePlayerDetails(betterproto.Message):
    accountid: int = betterproto.uint32_field(1)
    playerid: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    team: int = betterproto.uint32_field(4)
    heroid: int = betterproto.uint32_field(5)
    level: int = betterproto.uint32_field(6)
    kill_count: int = betterproto.uint32_field(7)
    death_count: int = betterproto.uint32_field(8)
    assists_count: int = betterproto.uint32_field(9)
    denies_count: int = betterproto.uint32_field(10)
    lh_count: int = betterproto.uint32_field(11)
    gold: int = betterproto.uint32_field(12)
    x: float = betterproto.float_field(13)
    y: float = betterproto.float_field(14)
    net_worth: int = betterproto.uint32_field(15)
    abilities: List[int] = betterproto.uint32_field(16)
    items: List[int] = betterproto.uint32_field(17)


@dataclass
class CMsgDOTARealtimeGameStatsTerseBuildingDetails(betterproto.Message):
    team: int = betterproto.uint32_field(1)
    heading: float = betterproto.float_field(2)
    type: int = betterproto.uint32_field(3)
    lane: int = betterproto.uint32_field(4)
    tier: int = betterproto.uint32_field(5)
    x: float = betterproto.float_field(6)
    y: float = betterproto.float_field(7)
    destroyed: bool = betterproto.bool_field(8)


@dataclass
class CMsgDOTARealtimeGameStatsTersePickBanDetails(betterproto.Message):
    hero: int = betterproto.uint32_field(1)
    team: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTARealtimeGameStatsTerseMatchDetails(betterproto.Message):
    server_steam_id: float = betterproto.fixed64_field(1)
    matchid: int = betterproto.uint64_field(2)
    timestamp: int = betterproto.uint32_field(3)
    game_time: int = betterproto.int32_field(4)
    steam_broadcaster_account_ids: List[int] = betterproto.uint32_field(6)
    game_mode: int = betterproto.uint32_field(7)
    league_id: int = betterproto.uint32_field(8)
    league_node_id: int = betterproto.uint32_field(9)
    game_state: int = betterproto.uint32_field(10)
    picks: List["CMsgDOTARealtimeGameStatsTersePickBanDetails"] = betterproto.message_field(11)
    bans: List["CMsgDOTARealtimeGameStatsTersePickBanDetails"] = betterproto.message_field(12)


@dataclass
class CMsgDOTARealtimeGameStatsTerseGraphData(betterproto.Message):
    graph_gold: List[int] = betterproto.int32_field(1)


@dataclass
class CMsgDOTABroadcastTimelineEvent(betterproto.Message):
    event: "EBroadcastTimelineEvent" = betterproto.enum_field(1)
    timestamp: float = betterproto.fixed32_field(2)
    data: int = betterproto.uint32_field(3)
    string_data: str = betterproto.string_field(4)


@dataclass
class CMsgGCToClientMatchGroupsVersion(betterproto.Message):
    matchgroups_version: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTASDOHeroStatsHistory(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    game_mode: int = betterproto.uint32_field(2)
    lobby_type: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)
    won: bool = betterproto.bool_field(5)
    gpm: int = betterproto.uint32_field(6)
    xpm: int = betterproto.uint32_field(7)
    kills: int = betterproto.uint32_field(8)
    deaths: int = betterproto.uint32_field(9)
    assists: int = betterproto.uint32_field(10)


@dataclass
class CMsgDOTASeasonRewards(betterproto.Message):
    rewards: List["CMsgDOTASeasonRewardsReward"] = betterproto.message_field(1)


@dataclass
class CMsgDOTASeasonRewardsReward(betterproto.Message):
    name: str = betterproto.string_field(1)
    itemdef: int = betterproto.uint32_field(2)
    importance: int = betterproto.uint32_field(3)
    base_level: int = betterproto.uint32_field(4)
    repeat_level: int = betterproto.uint32_field(5)
    reward_type: "CMsgDOTASeasonRewardsERewardType" = betterproto.enum_field(6)
    image: str = betterproto.string_field(7)
    action_id: int = betterproto.uint32_field(8)
    effect_index: int = betterproto.uint32_field(9)


@dataclass
class CMsgDOTASeasonAchievements(betterproto.Message):
    achievements: List["CMsgDOTASeasonAchievementsAchievement"] = betterproto.message_field(1)


@dataclass
class CMsgDOTASeasonAchievementsAchievement(betterproto.Message):
    name: str = betterproto.string_field(1)
    description: str = betterproto.string_field(2)
    image: str = betterproto.string_field(3)
    action_id: int = betterproto.uint32_field(4)
    max_grants: int = betterproto.uint32_field(5)
    normal_points: int = betterproto.uint32_field(6)
    tracking_achievement: int = betterproto.uint32_field(7)
    achievement_goal: int = betterproto.uint32_field(8)
    achievement_level: int = betterproto.uint32_field(9)


@dataclass
class CMsgDOTASeasonPredictions(betterproto.Message):
    predictions: List["CMsgDOTASeasonPredictionsPrediction"] = betterproto.message_field(1)
    in_game_predictions: List["CMsgDOTASeasonPredictionsInGamePrediction"] = betterproto.message_field(2)
    in_game_prediction_count_per_game: int = betterproto.uint32_field(3)
    in_game_prediction_voting_period_minutes: int = betterproto.uint32_field(4)


@dataclass
class CMsgDOTASeasonPredictionsChoice(betterproto.Message):
    value: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    min_raw_value: int = betterproto.uint32_field(3)
    max_raw_value: int = betterproto.uint32_field(4)


@dataclass
class CMsgDOTASeasonPredictionsAnswers(betterproto.Message):
    answer_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTASeasonPredictionsQueryKeyValues(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class CMsgDOTASeasonPredictionsPrediction(betterproto.Message):
    type: "CMsgDOTASeasonPredictionsEPredictionType" = betterproto.enum_field(1)
    question: str = betterproto.string_field(2)
    choices: List["CMsgDOTASeasonPredictionsChoice"] = betterproto.message_field(3)
    selection_id: int = betterproto.uint32_field(4)
    start_date: int = betterproto.uint32_field(5)
    lock_date: int = betterproto.uint32_field(6)
    reward: int = betterproto.uint32_field(7)
    answer_type: "CMsgDOTASeasonPredictionsEAnswerType" = betterproto.enum_field(8)
    answer_id: int = betterproto.uint32_field(9)
    answers: List["CMsgDOTASeasonPredictionsAnswers"] = betterproto.message_field(10)
    query_name: str = betterproto.string_field(11)
    lock_on_selection_id: int = betterproto.uint32_field(13)
    lock_on_selection_value: int = betterproto.uint32_field(14)
    lock_on_selection_set: bool = betterproto.bool_field(15)
    use_answer_value_ranges: bool = betterproto.bool_field(16)
    region: "ELeagueRegion" = betterproto.enum_field(17)
    phases: List["ELeaguePhase"] = betterproto.enum_field(18)


@dataclass
class CMsgDOTASeasonPredictionsInGamePrediction(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    type: "CMsgDOTASeasonPredictionsEPredictionType" = betterproto.enum_field(3)
    group: "CMsgDOTASeasonPredictionsERandomSelectionGroupT" = betterproto.enum_field(4)
    question: str = betterproto.string_field(5)
    choices: List["CMsgDOTASeasonPredictionsChoice"] = betterproto.message_field(6)
    required_heroes: List[str] = betterproto.string_field(7)
    query_name: str = betterproto.string_field(8)
    query_values: List["CMsgDOTASeasonPredictionsQueryKeyValues"] = betterproto.message_field(9)
    answer_resolution_type: "CMsgDOTASeasonPredictionsEResolutionTypeT" = betterproto.enum_field(10)
    points_to_grant: int = betterproto.uint32_field(11)
    reward_action: int = betterproto.uint32_field(12)
    debug_force_selection: int = betterproto.uint32_field(13)
    raw_value_type: "CMsgDOTASeasonPredictionsERawValueTypeT" = betterproto.enum_field(14)


@dataclass
class CMsgDOTAMatch(betterproto.Message):
    duration: int = betterproto.uint32_field(3)
    start_time: float = betterproto.fixed32_field(4)
    players: List["CMsgDOTAMatchPlayer"] = betterproto.message_field(5)
    match_id: int = betterproto.uint64_field(6)
    tower_status: List[int] = betterproto.uint32_field(8)
    barracks_status: List[int] = betterproto.uint32_field(9)
    cluster: int = betterproto.uint32_field(10)
    first_blood_time: int = betterproto.uint32_field(12)
    replay_salt: float = betterproto.fixed32_field(13)
    server_ip: float = betterproto.fixed32_field(14)
    server_port: int = betterproto.uint32_field(15)
    lobby_type: int = betterproto.uint32_field(16)
    human_players: int = betterproto.uint32_field(17)
    average_skill: int = betterproto.uint32_field(18)
    game_balance: float = betterproto.float_field(19)
    radiant_team_id: int = betterproto.uint32_field(20)
    dire_team_id: int = betterproto.uint32_field(21)
    leagueid: int = betterproto.uint32_field(22)
    radiant_team_name: str = betterproto.string_field(23)
    dire_team_name: str = betterproto.string_field(24)
    radiant_team_logo: int = betterproto.uint64_field(25)
    dire_team_logo: int = betterproto.uint64_field(26)
    radiant_team_logo_url: str = betterproto.string_field(54)
    dire_team_logo_url: str = betterproto.string_field(55)
    radiant_team_complete: int = betterproto.uint32_field(27)
    dire_team_complete: int = betterproto.uint32_field(28)
    positive_votes: int = betterproto.uint32_field(29)
    negative_votes: int = betterproto.uint32_field(30)
    game_mode: "DOTA_GameMode" = betterproto.enum_field(31)
    picks_bans: List["CMatchHeroSelectEvent"] = betterproto.message_field(32)
    match_seq_num: int = betterproto.uint64_field(33)
    replay_state: "CMsgDOTAMatchReplayState" = betterproto.enum_field(34)
    radiant_guild_id: int = betterproto.uint32_field(35)
    dire_guild_id: int = betterproto.uint32_field(36)
    radiant_team_tag: str = betterproto.string_field(37)
    dire_team_tag: str = betterproto.string_field(38)
    series_id: int = betterproto.uint32_field(39)
    series_type: int = betterproto.uint32_field(40)
    broadcaster_channels: List["CMsgDOTAMatchBroadcasterChannel"] = betterproto.message_field(43)
    engine: int = betterproto.uint32_field(44)
    custom_game_data: "CMsgDOTAMatchCustomGameData" = betterproto.message_field(45)
    match_flags: int = betterproto.uint32_field(46)
    private_metadata_key: float = betterproto.fixed32_field(47)
    radiant_team_score: int = betterproto.uint32_field(48)
    dire_team_score: int = betterproto.uint32_field(49)
    match_outcome: "EMatchOutcome" = betterproto.enum_field(50)
    tournament_id: int = betterproto.uint32_field(51)
    tournament_round: int = betterproto.uint32_field(52)
    pre_game_duration: int = betterproto.uint32_field(53)
    mvp_account_id: List[int] = betterproto.uint32_field(56)
    coaches: List["CMsgDOTAMatchCoach"] = betterproto.message_field(57)


@dataclass
class CMsgDOTAMatchPlayer(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    player_slot: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)
    item_0: int = betterproto.uint32_field(4)
    item_1: int = betterproto.uint32_field(5)
    item_2: int = betterproto.uint32_field(6)
    item_3: int = betterproto.uint32_field(7)
    item_4: int = betterproto.uint32_field(8)
    item_5: int = betterproto.uint32_field(9)
    item_6: int = betterproto.uint32_field(59)
    item_7: int = betterproto.uint32_field(60)
    item_8: int = betterproto.uint32_field(61)
    item_9: int = betterproto.uint32_field(76)
    expected_team_contribution: float = betterproto.float_field(10)
    scaled_metric: float = betterproto.float_field(11)
    previous_rank: int = betterproto.uint32_field(12)
    rank_change: int = betterproto.sint32_field(13)
    mmr_type: int = betterproto.uint32_field(74)
    rank_tier_updated: bool = betterproto.bool_field(66)
    kills: int = betterproto.uint32_field(14)
    deaths: int = betterproto.uint32_field(15)
    assists: int = betterproto.uint32_field(16)
    leaver_status: int = betterproto.uint32_field(17)
    gold: int = betterproto.uint32_field(18)
    last_hits: int = betterproto.uint32_field(19)
    denies: int = betterproto.uint32_field(20)
    gold_per_min: int = betterproto.uint32_field(21)
    x_p_per_min: int = betterproto.uint32_field(22)
    gold_spent: int = betterproto.uint32_field(23)
    hero_damage: int = betterproto.uint32_field(24)
    tower_damage: int = betterproto.uint32_field(25)
    hero_healing: int = betterproto.uint32_field(26)
    level: int = betterproto.uint32_field(27)
    time_last_seen: int = betterproto.uint32_field(28)
    player_name: str = betterproto.string_field(29)
    support_ability_value: int = betterproto.uint32_field(30)
    feeding_detected: bool = betterproto.bool_field(32)
    search_rank: int = betterproto.uint32_field(34)
    search_rank_uncertainty: int = betterproto.uint32_field(35)
    rank_uncertainty_change: int = betterproto.int32_field(36)
    hero_play_count: int = betterproto.uint32_field(37)
    party_id: float = betterproto.fixed64_field(38)
    scaled_hero_damage: int = betterproto.uint32_field(54)
    scaled_tower_damage: int = betterproto.uint32_field(55)
    scaled_hero_healing: int = betterproto.uint32_field(56)
    scaled_kills: float = betterproto.float_field(39)
    scaled_deaths: float = betterproto.float_field(40)
    scaled_assists: float = betterproto.float_field(41)
    claimed_farm_gold: int = betterproto.uint32_field(42)
    support_gold: int = betterproto.uint32_field(43)
    claimed_denies: int = betterproto.uint32_field(44)
    claimed_misses: int = betterproto.uint32_field(45)
    misses: int = betterproto.uint32_field(46)
    ability_upgrades: List["CMatchPlayerAbilityUpgrade"] = betterproto.message_field(47)
    additional_units_inventory: List["CMatchAdditionalUnitInventory"] = betterproto.message_field(48)
    permanent_buffs: List["CMatchPlayerPermanentBuff"] = betterproto.message_field(57)
    pro_name: str = betterproto.string_field(72)
    real_name: str = betterproto.string_field(73)
    custom_game_data: "CMsgDOTAMatchPlayerCustomGameData" = betterproto.message_field(50)
    active_plus_subscription: bool = betterproto.bool_field(51)
    net_worth: int = betterproto.uint32_field(52)
    bot_difficulty: int = betterproto.uint32_field(58)
    hero_pick_order: int = betterproto.uint32_field(63)
    hero_was_randomed: bool = betterproto.bool_field(64)
    hero_was_dota_plus_suggestion: bool = betterproto.bool_field(69)
    hero_damage_received: List["CMsgDOTAMatchPlayerHeroDamageReceived"] = betterproto.message_field(67)
    seconds_dead: int = betterproto.uint32_field(70)
    gold_lost_to_death: int = betterproto.uint32_field(71)
    lane_selection_flags: int = betterproto.uint32_field(75)
    bounty_runes: int = betterproto.uint32_field(77)
    outposts_captured: int = betterproto.uint32_field(78)


@dataclass
class CMsgDOTAMatchCMsgDOTAMatchPlayerCustomGameData(betterproto.Message):
    dota_team: int = betterproto.uint32_field(1)
    winner: bool = betterproto.bool_field(2)


@dataclass
class CMsgDOTAMatchCMsgDOTAMatchPlayerHeroDamageReceived(betterproto.Message):
    pre_reduction: int = betterproto.uint32_field(1)
    post_reduction: int = betterproto.uint32_field(2)
    damage_type: "CMsgDOTAMatchPlayerHeroDamageType" = betterproto.enum_field(3)


@dataclass
class CMsgDOTAMatchBroadcasterInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class CMsgDOTAMatchBroadcasterChannel(betterproto.Message):
    country_code: str = betterproto.string_field(1)
    description: str = betterproto.string_field(2)
    broadcaster_infos: List["CMsgDOTAMatchBroadcasterInfo"] = betterproto.message_field(3)
    language_code: str = betterproto.string_field(4)


@dataclass
class CMsgDOTAMatchCoach(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    coach_name: str = betterproto.string_field(2)
    coach_rating: int = betterproto.uint32_field(3)
    coach_team: int = betterproto.uint32_field(4)
    coach_party_id: int = betterproto.uint64_field(5)


@dataclass
class CMsgDOTAMatchCustomGameData(betterproto.Message):
    custom_game_id: int = betterproto.uint64_field(1)
    map_name: str = betterproto.string_field(2)


@dataclass
class CMsgPlayerCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    stat_modifier: List["CMsgPlayerCardStatModifier"] = betterproto.message_field(2)


@dataclass
class CMsgPlayerCardStatModifier(betterproto.Message):
    stat: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAFantasyPlayerStats(betterproto.Message):
    player_account_id: int = betterproto.uint32_field(1)
    match_id: int = betterproto.uint64_field(2)
    match_completed: bool = betterproto.bool_field(3)
    team_id: int = betterproto.uint32_field(4)
    league_id: int = betterproto.uint32_field(5)
    delay: int = betterproto.uint32_field(6)
    series_id: int = betterproto.uint32_field(7)
    series_type: int = betterproto.uint32_field(8)
    kills: int = betterproto.uint32_field(10)
    deaths: int = betterproto.uint32_field(11)
    cs: int = betterproto.uint32_field(12)
    gpm: float = betterproto.float_field(13)
    tower_kills: int = betterproto.uint32_field(14)
    roshan_kills: int = betterproto.uint32_field(15)
    teamfight_participation: float = betterproto.float_field(16)
    wards_placed: int = betterproto.uint32_field(17)
    camps_stacked: int = betterproto.uint32_field(18)
    runes_grabbed: int = betterproto.uint32_field(19)
    first_blood: int = betterproto.uint32_field(20)
    stuns: float = betterproto.float_field(21)


@dataclass
class CMsgDOTAFantasyPlayerMatchStats(betterproto.Message):
    matches: List["CMsgDOTAFantasyPlayerStats"] = betterproto.message_field(1)


@dataclass
class CMsgDOTABotDebugInfo(betterproto.Message):
    bots: List["CMsgDOTABotDebugInfoBot"] = betterproto.message_field(1)
    desire_push_lane_top: float = betterproto.float_field(2)
    desire_push_lane_mid: float = betterproto.float_field(3)
    desire_push_lane_bot: float = betterproto.float_field(4)
    desire_defend_lane_top: float = betterproto.float_field(5)
    desire_defend_lane_mid: float = betterproto.float_field(6)
    desire_defend_lane_bot: float = betterproto.float_field(7)
    desire_farm_lane_top: float = betterproto.float_field(8)
    desire_farm_lane_mid: float = betterproto.float_field(9)
    desire_farm_lane_bot: float = betterproto.float_field(10)
    desire_farm_roshan: float = betterproto.float_field(11)
    execution_time: float = betterproto.float_field(12)
    rune_status: List[int] = betterproto.uint32_field(13)


@dataclass
class CMsgDOTABotDebugInfoBot(betterproto.Message):
    player_owner_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    difficulty: int = betterproto.uint32_field(3)
    power_current: int = betterproto.uint32_field(4)
    power_max: int = betterproto.uint32_field(5)
    move_target_x: int = betterproto.uint32_field(6)
    move_target_y: int = betterproto.uint32_field(7)
    move_target_z: int = betterproto.uint32_field(8)
    active_mode_id: int = betterproto.uint32_field(9)
    execution_time: float = betterproto.float_field(10)
    modes: List["CMsgDOTABotDebugInfoBotMode"] = betterproto.message_field(11)
    action: "CMsgDOTABotDebugInfoBotAction" = betterproto.message_field(12)


@dataclass
class CMsgDOTABotDebugInfoCMsgDOTABotDebugInfoBotMode(betterproto.Message):
    mode_id: int = betterproto.uint32_field(1)
    desire: float = betterproto.float_field(2)
    target_entity: int = betterproto.uint32_field(3)
    target_x: int = betterproto.uint32_field(4)
    target_y: int = betterproto.uint32_field(5)
    target_z: int = betterproto.uint32_field(6)


@dataclass
class CMsgDOTABotDebugInfoCMsgDOTABotDebugInfoBotAction(betterproto.Message):
    action_id: int = betterproto.uint32_field(1)
    action_target: str = betterproto.string_field(2)


@dataclass
class CMsgSuccessfulHero(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    win_percent: float = betterproto.float_field(2)
    longest_streak: int = betterproto.uint32_field(3)


@dataclass
class CMsgRecentMatchInfo(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    game_mode: "DOTA_GameMode" = betterproto.enum_field(2)
    kills: int = betterproto.uint32_field(3)
    deaths: int = betterproto.uint32_field(4)
    assists: int = betterproto.uint32_field(5)
    duration: int = betterproto.uint32_field(6)
    player_slot: int = betterproto.uint32_field(7)
    match_outcome: "EMatchOutcome" = betterproto.enum_field(8)
    timestamp: int = betterproto.uint32_field(9)


@dataclass
class CMsgMatchTips(betterproto.Message):
    tips: List["CMsgMatchTipsSingleTip"] = betterproto.message_field(2)


@dataclass
class CMsgMatchTipsSingleTip(betterproto.Message):
    source_account_id: int = betterproto.uint32_field(1)
    target_account_id: int = betterproto.uint32_field(2)
    tip_amount: int = betterproto.uint32_field(3)
    event_id: "EEvent" = betterproto.enum_field(4)


@dataclass
class CMsgDOTAMatchMinimal(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    start_time: float = betterproto.fixed32_field(2)
    duration: int = betterproto.uint32_field(3)
    game_mode: "DOTA_GameMode" = betterproto.enum_field(4)
    players: List["CMsgDOTAMatchMinimalPlayer"] = betterproto.message_field(6)
    tourney: "CMsgDOTAMatchMinimalTourney" = betterproto.message_field(7)
    match_outcome: "EMatchOutcome" = betterproto.enum_field(8)
    radiant_score: int = betterproto.uint32_field(9)
    dire_score: int = betterproto.uint32_field(10)


@dataclass
class CMsgDOTAMatchMinimalPlayer(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    kills: int = betterproto.uint32_field(3)
    deaths: int = betterproto.uint32_field(4)
    assists: int = betterproto.uint32_field(5)
    items: List[int] = betterproto.uint32_field(6)
    player_slot: int = betterproto.uint32_field(7)
    pro_name: str = betterproto.string_field(8)


@dataclass
class CMsgDOTAMatchMinimalTourney(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    series_type: int = betterproto.uint32_field(8)
    series_game: int = betterproto.uint32_field(9)
    weekend_tourney_tournament_id: int = betterproto.uint32_field(10)
    weekend_tourney_season_trophy_id: int = betterproto.uint32_field(11)
    weekend_tourney_division: int = betterproto.uint32_field(12)
    weekend_tourney_skill_level: int = betterproto.uint32_field(13)
    radiant_team_id: int = betterproto.uint32_field(2)
    radiant_team_name: str = betterproto.string_field(3)
    radiant_team_logo: float = betterproto.fixed64_field(4)
    radiant_team_logo_url: str = betterproto.string_field(14)
    dire_team_id: int = betterproto.uint32_field(5)
    dire_team_name: str = betterproto.string_field(6)
    dire_team_logo: float = betterproto.fixed64_field(7)
    dire_team_logo_url: str = betterproto.string_field(15)


@dataclass
class CMsgConsumableUsage(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    quantity_change: int = betterproto.int32_field(2)


@dataclass
class CMsgMatchConsumableUsage(betterproto.Message):
    player_consumables_used: List["CMsgMatchConsumableUsagePlayerUsage"] = betterproto.message_field(1)


@dataclass
class CMsgMatchConsumableUsagePlayerUsage(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    consumables_used: List["CMsgConsumableUsage"] = betterproto.message_field(2)


@dataclass
class CMsgMatchEventActionGrants(betterproto.Message):
    player_grants: List["CMsgMatchEventActionGrantsPlayerGrants"] = betterproto.message_field(1)


@dataclass
class CMsgMatchEventActionGrantsGrant(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    action_id: int = betterproto.uint32_field(2)
    audit: int = betterproto.uint32_field(3)
    quantity: int = betterproto.uint32_field(4)


@dataclass
class CMsgMatchEventActionGrantsPlayerGrants(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    actions_granted_old: List["CMsgMatchEventActionGrantsGrant"] = betterproto.message_field(2)
    actions_granted: List["CMsgPendingEventAward"] = betterproto.message_field(3)


@dataclass
class CMsgCustomGameWhitelist(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    custom_games_whitelist: List[int] = betterproto.uint64_field(2)
    disable_whitelist: bool = betterproto.bool_field(3)


@dataclass
class CMsgCustomGameWhitelistForEdit(betterproto.Message):
    whitelist_entries: List["CMsgCustomGameWhitelistForEditWhitelistEntry"] = betterproto.message_field(1)


@dataclass
class CMsgCustomGameWhitelistForEditWhitelistEntry(betterproto.Message):
    custom_game_id: int = betterproto.uint64_field(1)
    whitelist_state: "ECustomGameWhitelistState" = betterproto.enum_field(2)


@dataclass
class CMsgPlayerRecentMatchInfo(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    timestamp: int = betterproto.uint32_field(2)
    duration: int = betterproto.uint32_field(3)
    win: bool = betterproto.bool_field(4)
    hero_id: int = betterproto.uint32_field(5)
    kills: int = betterproto.uint32_field(6)
    deaths: int = betterproto.uint32_field(7)
    assists: int = betterproto.uint32_field(8)


@dataclass
class CMsgPlayerMatchRecord(betterproto.Message):
    wins: int = betterproto.uint32_field(1)
    losses: int = betterproto.uint32_field(2)


@dataclass
class CMsgPlayerRecentMatchOutcomes(betterproto.Message):
    outcomes: int = betterproto.uint32_field(1)
    match_count: int = betterproto.uint32_field(2)


@dataclass
class CMsgPlayerRecentCommends(betterproto.Message):
    commends: int = betterproto.uint32_field(1)
    match_count: int = betterproto.uint32_field(2)


@dataclass
class CMsgPlayerRecentAccomplishments(betterproto.Message):
    recent_outcomes: "CMsgPlayerRecentMatchOutcomes" = betterproto.message_field(1)
    total_record: "CMsgPlayerMatchRecord" = betterproto.message_field(2)
    prediction_streak: int = betterproto.uint32_field(3)
    plus_prediction_streak: int = betterproto.uint32_field(4)
    recent_commends: "CMsgPlayerRecentCommends" = betterproto.message_field(5)
    first_match_timestamp: int = betterproto.uint32_field(6)
    last_match: "CMsgPlayerRecentMatchInfo" = betterproto.message_field(7)
    recent_mvps: "CMsgPlayerRecentMatchOutcomes" = betterproto.message_field(8)


@dataclass
class CMsgPlayerHeroRecentAccomplishments(betterproto.Message):
    recent_outcomes: "CMsgPlayerRecentMatchOutcomes" = betterproto.message_field(1)
    total_record: "CMsgPlayerMatchRecord" = betterproto.message_field(2)
    last_match: "CMsgPlayerRecentMatchInfo" = betterproto.message_field(3)


@dataclass
class CMsgRecentAccomplishments(betterproto.Message):
    player_accomplishments: "CMsgPlayerRecentAccomplishments" = betterproto.message_field(1)
    hero_accomplishments: "CMsgPlayerHeroRecentAccomplishments" = betterproto.message_field(2)


@dataclass
class CMsgRequestPlayerRecentAccomplishments(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgRequestPlayerRecentAccomplishmentsResponse(betterproto.Message):
    result: "CMsgRequestPlayerRecentAccomplishmentsResponseEResponse" = betterproto.enum_field(1)
    player_accomplishments: "CMsgRecentAccomplishments" = betterproto.message_field(2)


@dataclass
class CMsgArcanaVoteMatchVotes(betterproto.Message):
    match_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    vote_count: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCtoGCAssociatedExploiterAccountInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    num_matches_to_search: int = betterproto.uint32_field(2)
    min_shared_match_count: int = betterproto.uint32_field(3)
    num_additional_players: int = betterproto.uint32_field(4)


@dataclass
class CMsgGCtoGCAssociatedExploiterAccountInfoResponse(betterproto.Message):
    accounts: List["CMsgGCtoGCAssociatedExploiterAccountInfoResponseAccount"] = betterproto.message_field(1)


@dataclass
class CMsgGCtoGCAssociatedExploiterAccountInfoResponseAccount(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    num_common_matches: int = betterproto.uint32_field(2)
    earliest_common_match: int = betterproto.uint32_field(3)
    latest_common_match: int = betterproto.uint32_field(4)
    generation: int = betterproto.uint32_field(5)
    persona: str = betterproto.string_field(6)
    already_banned: bool = betterproto.bool_field(7)


@dataclass
class CMsgPullTabsData(betterproto.Message):
    slots: List["CMsgPullTabsDataSlot"] = betterproto.message_field(1)
    jackpots: List["CMsgPullTabsDataJackpot"] = betterproto.message_field(2)
    last_board: int = betterproto.uint32_field(3)


@dataclass
class CMsgPullTabsDataSlot(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    board_id: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)
    action_id: int = betterproto.uint32_field(4)
    redeemed: bool = betterproto.bool_field(5)


@dataclass
class CMsgPullTabsDataJackpot(betterproto.Message):
    board_id: int = betterproto.uint32_field(1)
    action_id: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgUnderDraftData(betterproto.Message):
    bench_slots: List["CMsgUnderDraftDataBenchSlot"] = betterproto.message_field(1)
    shop_slots: List["CMsgUnderDraftDataShopSlot"] = betterproto.message_field(2)
    gold: int = betterproto.uint32_field(3)
    total_gold: int = betterproto.uint32_field(4)
    not_restorable: bool = betterproto.bool_field(5)


@dataclass
class CMsgUnderDraftDataBenchSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    stars: int = betterproto.uint32_field(3)


@dataclass
class CMsgUnderDraftDataShopSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    is_special_reward: bool = betterproto.bool_field(3)


@dataclass
class CMsgPlayerTitleData(betterproto.Message):
    title: List[int] = betterproto.uint32_field(1)
    event_id: List[int] = betterproto.uint32_field(2)
    active: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTATriviaQuestion(betterproto.Message):
    question_id: int = betterproto.uint32_field(1)
    category: "EDOTATriviaQuestionCategory" = betterproto.enum_field(2)
    timestamp: int = betterproto.uint32_field(3)
    question_value: str = betterproto.string_field(4)
    answer_values: List[str] = betterproto.string_field(5)
    correct_answer_index: int = betterproto.uint32_field(6)


@dataclass
class CMsgDOTATriviaQuestionAnswersSummary(betterproto.Message):
    summary_available: bool = betterproto.bool_field(1)
    picked_count: List[int] = betterproto.uint32_field(2)
