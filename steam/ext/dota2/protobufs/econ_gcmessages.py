# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: econ_gcmessages.proto
# plugin: python-betterproto

from dataclasses import dataclass
from typing import List

import betterproto

from .econ_shared_enums import EGCMsgResponse, EGCPartnerRequestResponse


class EItemPurgatoryResponse_Finalize(betterproto.Enum):
    Succeeded = 0
    FailedIncomplete = 1
    FailedItemsNotInPurgatory = 2
    FailedCouldNotFindItems = 3
    FailedNoSOCache = 4
    BackpackFull = 5


class EItemPurgatoryResponse_Refund(betterproto.Enum):
    Succeeded = 0
    FailedItemNotInPurgatory = 1
    FailedCouldNotFindItem = 2
    FailedNoSOCache = 3
    FailedNoDetail = 4


class EGCMsgInitiateTradeResponse(betterproto.Enum):
    Accepted = 0
    Declined = 1
    VACBannedInitiator = 2
    VACBannedTarget = 3
    TargetAlreadyTrading = 4
    Disabled = 5
    NotLoggedIn = 6
    Cancel = 7
    TooSoon = 8
    TooSoonPenalty = 9
    TradeBannedInitiator = 10
    TradeBannedTarget = 11
    SharedAccountInitiator = 13
    ServiceUnavailable = 14
    TargetBlocked = 15
    NeedVerifiedEmail = 16
    NeedSteamGuard = 17
    SteamGuardDuration = 18
    TheyCannotTrade = 19
    RecentPassword_Reset = 20
    UsingNewDevice = 21
    SentInvalidCookie = 22
    TooRecentFriend = 23
    WalledFundsNotTrusted = 24


class CMsgRequestCrateItemsResponseEResult(betterproto.Enum):
    Succeeded = 0
    Failed = 1


class CMsgRequestCrateEscalationLevelResponseEResult(betterproto.Enum):
    Succeeded = 0
    Failed = 1


class CMsgRedeemCodeResponseEResultCode(betterproto.Enum):
    Succeeded = 0
    FailedCodeNotFound = 1
    FailedCodeAlreadyUsed = 2
    FailedOtherError = 3


class CMsgClientToGCUnpackBundleResponseEUnpackBundle(betterproto.Enum):
    Succeeded = 0
    FailedItemIsNotBundle = 1
    FailedUnableToCreateContainedItem = 2
    FailedSOCacheError = 3
    FailedItemIsInvalid = 4
    FailedBadItemQuantity = 5
    FailedUnableToDeleteItem = 6


class CMsgClientToGCSetItemStyleResponseESetStyle(betterproto.Enum):
    Succeeded = 0
    Failed = 1
    FailedStyleIsLocked = 2


class CMsgClientToGCUnlockItemStyleResponseEUnlockStyle(betterproto.Enum):
    Succeeded = 0
    FailedPreReq = 1
    FailedCantAfford = 2
    FailedCantCommit = 3
    FailedCantLockCache = 4
    FailedCantAffordAttrib = 5
    FailedCantAffordGem = 6
    FailedNoCompendiumLevel = 7
    FailedAlreadyUnlocked = 8
    FailedOtherError = 9
    FailedItemIsInvalid = 10
    FailedToolIsInvalid = 11


class CMsgClientToGCRemoveItemAttributeResponseERemoveItemAttribute(betterproto.Enum):
    Succeeded = 0
    Failed = 1
    FailedItemIsInvalid = 2
    FailedAttributeCannotBeRemoved = 3
    Faile_AttributeDoesntExist = 4


class CMsgClientToGCNameItemResponseENameItem(betterproto.Enum):
    Succeeded = 0
    Failed = 1
    FailedToolIsInvalid = 2
    FailedItemIsInvalid = 3
    FailedNameIsInvalid = 4


class CMsgClientToGCCreateStaticRecipeResponseEResponse(betterproto.Enum):
    Success = 0
    OfferingDisabled = 1
    InvalidItems = 2
    InternalError = 3
    MissingLeague = 4
    MissingEvent = 5


class CMsgClientToGCGetLimitedItemPurchaseQuantityResponseEResponse(betterproto.Enum):
    InternalError = 0
    Success = 1
    TooBusy = 2
    Disabled = 3
    Timeout = 4
    InvalidItemDef = 5
    ItemDefNotLimited = 6


@dataclass
class CMsgApplyAutograph(betterproto.Message):
    autograph_item_id: int = betterproto.uint64_field(1)
    item_item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgAdjustItemEquippedState(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    new_class: int = betterproto.uint32_field(2)
    new_slot: int = betterproto.uint32_field(3)
    style_index: int = betterproto.uint32_field(4)


@dataclass
class CMsgEconPlayerStrangeCountAdjustment(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    strange_count_adjustments: List[
        "CMsgEconPlayerStrangeCountAdjustmentCStrangeCountAdjustment"
    ] = betterproto.message_field(2)
    turbo_mode: bool = betterproto.bool_field(3)


@dataclass
class CMsgEconPlayerStrangeCountAdjustmentCStrangeCountAdjustment(betterproto.Message):
    event_type: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint64_field(2)
    adjustment: int = betterproto.uint32_field(3)


@dataclass
class CMsgRequestItemPurgatory_FinalizePurchase(betterproto.Message):
    item_ids: List[int] = betterproto.uint64_field(1)


@dataclass
class CMsgRequestItemPurgatory_FinalizePurchaseResponse(betterproto.Message):
    result: int = betterproto.uint32_field(1)
    item_ids: List[int] = betterproto.uint64_field(2)


@dataclass
class CMsgRequestItemPurgatory_RefundPurchase(betterproto.Message):
    item_ids: List[int] = betterproto.uint64_field(1)


@dataclass
class CMsgRequestItemPurgatory_RefundPurchaseResponse(betterproto.Message):
    result: int = betterproto.uint32_field(1)


@dataclass
class CMsgCraftingResponse(betterproto.Message):
    item_ids: List[int] = betterproto.uint64_field(1)


@dataclass
class CMsgGCRequestStoreSalesData(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    currency: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCRequestStoreSalesDataResponse(betterproto.Message):
    sale_price: List["CMsgGCRequestStoreSalesDataResponsePrice"] = betterproto.message_field(1)
    version: int = betterproto.uint32_field(2)
    expiration_time: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCRequestStoreSalesDataResponsePrice(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    price: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCRequestStoreSalesDataUpToDateResponse(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    expiration_time: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToGCPingRequest(betterproto.Message):
    pass


@dataclass
class CMsgGCToGCPingResponse(betterproto.Message):
    pass


@dataclass
class CMsgGCToGCGetUserSessionServer(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToGCGetUserSessionServerResponse(betterproto.Message):
    server_steam_id: float = betterproto.fixed64_field(1)
    is_online: bool = betterproto.bool_field(2)


@dataclass
class CMsgGCToGCGetUserServerMembers(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    max_spectators: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToGCGetUserServerMembersResponse(betterproto.Message):
    member_account_id: List[int] = betterproto.uint32_field(1)


@dataclass
class CMsgLookupMultipleAccountNames(betterproto.Message):
    accountids: List[int] = betterproto.uint32_field(1)


@dataclass
class CMsgLookupMultipleAccountNamesResponse(betterproto.Message):
    accounts: List["CMsgLookupMultipleAccountNamesResponseAccount"] = betterproto.message_field(1)


@dataclass
class CMsgLookupMultipleAccountNamesResponseAccount(betterproto.Message):
    accountid: int = betterproto.uint32_field(1)
    persona: str = betterproto.string_field(2)


@dataclass
class CMsgRequestCrateItems(betterproto.Message):
    crate_item_def: int = betterproto.uint32_field(1)


@dataclass
class CMsgRequestCrateItemsResponse(betterproto.Message):
    response: int = betterproto.uint32_field(1)
    item_defs: List[int] = betterproto.uint32_field(2)
    peeitem_defs: List[int] = betterproto.uint32_field(3)


@dataclass
class CMsgRequestCrateEscalationLevel(betterproto.Message):
    crate_item_def: int = betterproto.uint32_field(1)


@dataclass
class CMsgRequestCrateEscalationLevelResponse(betterproto.Message):
    response: int = betterproto.uint32_field(1)
    escalation_level0: int = betterproto.uint32_field(2)
    escalation_level1: int = betterproto.uint32_field(3)
    escalation_level2: int = betterproto.uint32_field(4)
    escalation_level3: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToGCCanUseDropRateBonus(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    drop_rate_bonus: float = betterproto.float_field(2)
    booster_type: int = betterproto.uint32_field(3)
    exclusive_item_def: int = betterproto.uint32_field(4)
    allow_equal_rate: bool = betterproto.bool_field(5)


@dataclass
class CMsgSQLAddDropRateBonus(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint64_field(2)
    item_def: int = betterproto.uint32_field(3)
    drop_rate_bonus: float = betterproto.float_field(4)
    booster_type: int = betterproto.uint32_field(5)
    seconds_duration: int = betterproto.uint32_field(6)
    end_time_stamp: int = betterproto.uint32_field(7)


@dataclass
class CMsgSQLUpgradeBattleBooster(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    item_def: int = betterproto.uint32_field(2)
    bonus_to_add: float = betterproto.float_field(3)
    booster_type: int = betterproto.uint32_field(4)


@dataclass
class CMsgGCToGCRefreshSOCache(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    reload: bool = betterproto.bool_field(2)


@dataclass
class CMsgGCToGCCheckAccountTradeStatus(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    initiator: bool = betterproto.bool_field(2)


@dataclass
class CMsgGCToGCCheckAccountTradeStatusResponse(betterproto.Message):
    can_trade: bool = betterproto.bool_field(1)
    error_code: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToGCAddSubscriptionTime(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    matching_subscription_def_indexes: List[int] = betterproto.uint32_field(2)
    additional_seconds: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToGCGrantAccountRolledItems(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    items: List["CMsgGCToGCGrantAccountRolledItemsItem"] = betterproto.message_field(2)
    audit_action: int = betterproto.uint32_field(3)
    audit_data: int = betterproto.uint64_field(4)


@dataclass
class CMsgGCToGCGrantAccountRolledItemsItem(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    loot_lists: List[str] = betterproto.string_field(2)
    ignore_limit: bool = betterproto.bool_field(3)
    origin: int = betterproto.uint32_field(4)
    dynamic_attributes: List["CMsgGCToGCGrantAccountRolledItemsItemDynamicAttribute"] = betterproto.message_field(5)
    additional_audit_entries: List[
        "CMsgGCToGCGrantAccountRolledItemsItemAdditionalAuditEntry"
    ] = betterproto.message_field(6)
    inventory_token: int = betterproto.uint32_field(7)


@dataclass
class CMsgGCToGCGrantAccountRolledItemsItemDynamicAttribute(betterproto.Message):
    name: str = betterproto.string_field(1)
    value_uint32: int = betterproto.uint32_field(2)
    value_float: float = betterproto.float_field(3)
    value_string: str = betterproto.string_field(4)


@dataclass
class CMsgGCToGCGrantAccountRolledItemsItemAdditionalAuditEntry(betterproto.Message):
    owner_account_id: int = betterproto.uint32_field(1)
    audit_action: int = betterproto.uint32_field(2)
    audit_data: int = betterproto.uint64_field(3)


@dataclass
class CMsgGCToGCGrantSelfMadeItemToAccount(betterproto.Message):
    item_def_index: int = betterproto.uint32_field(1)
    accountid: int = betterproto.uint32_field(2)


@dataclass
class CMsgUseItem(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    target_steam_id: float = betterproto.fixed64_field(2)
    gift__potential_targets: List[int] = betterproto.uint32_field(3)
    duel__class_lock: int = betterproto.uint32_field(4)
    initiator_steam_id: int = betterproto.uint64_field(5)
    itempac_acimmediately: bool = betterproto.bool_field(6)


@dataclass
class CMsgServerUseItem(betterproto.Message):
    initiator_account_id: int = betterproto.uint32_field(1)
    use_item_msg: "CMsgUseItem" = betterproto.message_field(2)


@dataclass
class CMsgUseMultipleItems(betterproto.Message):
    item_ids: List[int] = betterproto.uint64_field(1)


@dataclass
class CMsgGCPartnerBalanceRequest(betterproto.Message):
    pass


@dataclass
class CMsgGCPartnerBalanceResponse(betterproto.Message):
    result: "EGCPartnerRequestResponse" = betterproto.enum_field(1)
    balance: int = betterproto.uint32_field(2)


@dataclass
class CGCStoreRechargeRedirect_LineItem(betterproto.Message):
    item_def_id: int = betterproto.uint32_field(1)
    quantity: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCPartnerRechargeRedirectURLRequest(betterproto.Message):
    line_items: List["CGCStoreRechargeRedirect_LineItem"] = betterproto.message_field(1)


@dataclass
class CMsgGCPartnerRechargeRedirectURLResponse(betterproto.Message):
    result: "EGCPartnerRequestResponse" = betterproto.enum_field(1)
    url: str = betterproto.string_field(2)


@dataclass
class CMsgGCEconSQLWorkItemEmbeddedRollbackData(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    deleted_item_id: int = betterproto.uint64_field(2)
    old_audit_action: int = betterproto.uint32_field(3)
    new_audit_action: int = betterproto.uint32_field(4)
    expected_audit_action: int = betterproto.uint32_field(5)


@dataclass
class CMsgCraftStatue(betterproto.Message):
    heroid: int = betterproto.uint32_field(1)
    sequencename: str = betterproto.string_field(2)
    cycle: float = betterproto.float_field(3)
    description: str = betterproto.string_field(4)
    pedestal_itemdef: int = betterproto.uint32_field(5)
    toolid: int = betterproto.uint64_field(6)


@dataclass
class CMsgRedeemCode(betterproto.Message):
    code: str = betterproto.string_field(1)


@dataclass
class CMsgRedeemCodeResponse(betterproto.Message):
    response: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgDevNewItemRequest(betterproto.Message):
    item_def_name: str = betterproto.string_field(3)
    loot_list_name: str = betterproto.string_field(4)
    attr_def_name: List[str] = betterproto.string_field(5)
    attr_value: List[str] = betterproto.string_field(6)


@dataclass
class CMsgDevNewItemRequestResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)


@dataclass
class CMsgDevUnlockAllItemStyles(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgDevUnlockAllItemStylesResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCGetAccountSubscriptionItem(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCGetAccountSubscriptionItemResponse(betterproto.Message):
    def_index: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCAddGiftItem(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCWrapAndDeliverGift(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    give_to_account_id: int = betterproto.uint32_field(2)
    gift_message: str = betterproto.string_field(3)


@dataclass
class CMsgClientToGCWrapAndDeliverGiftResponse(betterproto.Message):
    response: "EGCMsgResponse" = betterproto.enum_field(1)
    gifting_charge_uses: int = betterproto.uint32_field(2)
    gifting_charge_max: int = betterproto.int32_field(3)
    gifting_uses: int = betterproto.uint32_field(4)
    gifting_max: int = betterproto.int32_field(5)
    gifting_window_hours: int = betterproto.uint32_field(6)
    trade_restriction: "EGCMsgInitiateTradeResponse" = betterproto.enum_field(7)


@dataclass
class CMsgClientToGCUnwrapGift(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgClientToGCGetGiftPermissions(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCGetGiftPermissionsResponse(betterproto.Message):
    is_unlimited: bool = betterproto.bool_field(1)
    has_two_factor: bool = betterproto.bool_field(3)
    sender_permission: "EGCMsgInitiateTradeResponse" = betterproto.enum_field(6)
    friendship_age_requirement: int = betterproto.uint32_field(7)
    friendship_age_requirement_two_factor: int = betterproto.uint32_field(8)
    friend_permissions: List["CMsgClientToGCGetGiftPermissionsResponseFriendPermission"] = betterproto.message_field(9)


@dataclass
class CMsgClientToGCGetGiftPermissionsResponseFriendPermission(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    permission: "EGCMsgInitiateTradeResponse" = betterproto.enum_field(2)


@dataclass
class CMsgClientToGCUnpackBundle(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgClientToGCUnpackBundleResponse(betterproto.Message):
    unpacked_item_ids: List[int] = betterproto.uint64_field(1)
    response: "CMsgClientToGCUnpackBundleResponseEUnpackBundle" = betterproto.enum_field(2)
    unpacked_item_def_indexes: List[int] = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientStoreTransactionCompleted(betterproto.Message):
    txn_id: int = betterproto.uint64_field(1)
    item_ids: List[int] = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCEquipItems(betterproto.Message):
    equips: List["CMsgAdjustItemEquippedState"] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCEquipItemsResponse(betterproto.Message):
    so_cache_version_id: float = betterproto.fixed64_field(1)


@dataclass
class CMsgClientToGCSetItemStyle(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    style_index: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCSetItemStyleResponse(betterproto.Message):
    response: "CMsgClientToGCSetItemStyleResponseESetStyle" = betterproto.enum_field(1)


@dataclass
class CMsgClientToGCUnlockItemStyle(betterproto.Message):
    item_to_unlock: int = betterproto.uint64_field(1)
    style_index: int = betterproto.uint32_field(2)
    consumable_item_ids: List[int] = betterproto.uint64_field(3)


@dataclass
class CMsgClientToGCUnlockItemStyleResponse(betterproto.Message):
    response: "CMsgClientToGCUnlockItemStyleResponseEUnlockStyle" = betterproto.enum_field(1)
    item_id: int = betterproto.uint64_field(2)
    style_index: int = betterproto.uint32_field(3)
    style_prereq: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCSetItemInventoryCategory(betterproto.Message):
    item_ids: List[int] = betterproto.uint64_field(1)
    set_to_value: int = betterproto.uint32_field(2)
    remove_categories: int = betterproto.uint32_field(3)
    add_categories: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCUnlockCrate(betterproto.Message):
    crate_item_id: int = betterproto.uint64_field(1)
    key_item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCUnlockCrateResponse(betterproto.Message):
    result: "EGCMsgResponse" = betterproto.enum_field(1)
    granted_items: List["CMsgClientToGCUnlockCrateResponseItem"] = betterproto.message_field(2)


@dataclass
class CMsgClientToGCUnlockCrateResponseItem(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    def_index: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCRemoveItemAttribute(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgClientToGCRemoveItemAttributeResponse(betterproto.Message):
    response: "CMsgClientToGCRemoveItemAttributeResponseERemoveItemAttribute" = betterproto.enum_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCNameItem(betterproto.Message):
    subject_item_id: int = betterproto.uint64_field(1)
    tool_item_id: int = betterproto.uint64_field(2)
    name: str = betterproto.string_field(3)


@dataclass
class CMsgClientToGCNameItemResponse(betterproto.Message):
    response: "CMsgClientToGCNameItemResponseENameItem" = betterproto.enum_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgGCSetItemPosition(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    new_position: int = betterproto.uint32_field(2)


@dataclass
class CAttribute_ItemDynamicRecipeComponent(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    item_quality: int = betterproto.uint32_field(2)
    item_flags: int = betterproto.uint32_field(3)
    attributes_string: str = betterproto.string_field(4)
    item_count: int = betterproto.uint32_field(5)
    items_fulfilled: int = betterproto.uint32_field(6)
    item_rarity: int = betterproto.uint32_field(7)
    lootlist: str = betterproto.string_field(8)
    fulfilled_item_id: int = betterproto.uint64_field(9)


@dataclass
class CProtoItemSocket(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    attr_def_index: int = betterproto.uint32_field(2)
    required_type: int = betterproto.uint32_field(3)
    required_hero: str = betterproto.string_field(4)
    gem_def_index: int = betterproto.uint32_field(5)
    not_tradable: bool = betterproto.bool_field(6)
    required_item_slot: str = betterproto.string_field(7)


@dataclass
class CProtoItemSocket_Empty(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)


@dataclass
class CProtoItemSocket_Effect(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)
    effect: int = betterproto.uint32_field(2)


@dataclass
class CProtoItemSocket_Color(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)
    red: int = betterproto.uint32_field(2)
    green: int = betterproto.uint32_field(3)
    blue: int = betterproto.uint32_field(4)


@dataclass
class CProtoItemSocket_Strange(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)
    strange_type: int = betterproto.uint32_field(2)
    strange_value: int = betterproto.uint32_field(3)


@dataclass
class CProtoItemSocket_Spectator(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)
    games_viewed: int = betterproto.uint32_field(2)
    corporation_id: int = betterproto.uint32_field(3)
    league_id: int = betterproto.uint32_field(4)
    team_id: int = betterproto.uint32_field(5)


@dataclass
class CProtoItemSocket_AssetModifier(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)
    asset_modifier: int = betterproto.uint32_field(2)


@dataclass
class CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)
    asset_modifier: int = betterproto.uint32_field(2)
    anim_modifier: int = betterproto.uint32_field(3)
    ability_effect: int = betterproto.uint32_field(4)


@dataclass
class CProtoItemSocket_Autograph(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)
    autograph: str = betterproto.string_field(2)
    autograph_id: int = betterproto.uint32_field(3)
    autograph_score: int = betterproto.uint32_field(4)


@dataclass
class CProtoItemSocket_StaticVisuals(betterproto.Message):
    socket: "CProtoItemSocket" = betterproto.message_field(1)


@dataclass
class CAttribute_String(betterproto.Message):
    value: str = betterproto.string_field(1)


@dataclass
class CWorkshop_GetItemDailyRevenue_Request(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)
    date_start: int = betterproto.uint32_field(3)
    date_end: int = betterproto.uint32_field(4)


@dataclass
class CWorkshop_GetItemDailyRevenue_Response(betterproto.Message):
    country_revenue: List["CWorkshop_GetItemDailyRevenue_ResponseCountryDailyRevenue"] = betterproto.message_field(1)


@dataclass
class CWorkshop_GetItemDailyRevenue_ResponseCountryDailyRevenue(betterproto.Message):
    country_code: str = betterproto.string_field(1)
    date: int = betterproto.uint32_field(2)
    revenue_usd: int = betterproto.int64_field(3)
    units: int = betterproto.int32_field(4)


@dataclass
class CWorkshop_GetPackageDailyRevenue_Request(betterproto.Message):
    packageid: int = betterproto.uint32_field(1)
    date_start: int = betterproto.uint32_field(2)
    date_end: int = betterproto.uint32_field(3)


@dataclass
class CWorkshop_GetPackageDailyRevenue_Response(betterproto.Message):
    country_revenue: List["CWorkshop_GetPackageDailyRevenue_ResponseCountryDailyRevenue"] = betterproto.message_field(1)


@dataclass
class CWorkshop_GetPackageDailyRevenue_ResponseCountryDailyRevenue(betterproto.Message):
    country_code: str = betterproto.string_field(1)
    date: int = betterproto.uint32_field(2)
    revenue_usd: int = betterproto.int64_field(3)
    units: int = betterproto.int32_field(4)


@dataclass
class CMsgSQLGCToGCGrantBackpackSlots(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    add_slots: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCLookupAccountName(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCLookupAccountNameResponse(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    account_name: str = betterproto.string_field(2)


@dataclass
class CMsgClientToGCCreateStaticRecipe(betterproto.Message):
    items: List["CMsgClientToGCCreateStaticRecipeItem"] = betterproto.message_field(1)
    recipe_def_index: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCCreateStaticRecipeItem(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    slot_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCCreateStaticRecipeResponse(betterproto.Message):
    response: "CMsgClientToGCCreateStaticRecipeResponseEResponse" = betterproto.enum_field(1)
    output_items: List["CMsgClientToGCCreateStaticRecipeResponseOutputItem"] = betterproto.message_field(2)
    input_errors: List["CMsgClientToGCCreateStaticRecipeResponseInputError"] = betterproto.message_field(3)
    additional_outputs: List["CMsgClientToGCCreateStaticRecipeResponseAdditionalOutput"] = betterproto.message_field(4)


@dataclass
class CMsgClientToGCCreateStaticRecipeResponseOutputItem(betterproto.Message):
    def_index: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint64_field(2)
    slot_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCCreateStaticRecipeResponseInputError(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    error: "CMsgClientToGCCreateStaticRecipeResponseEResponse" = betterproto.enum_field(2)


@dataclass
class CMsgClientToGCCreateStaticRecipeResponseAdditionalOutput(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    value: int = betterproto.uint64_field(2)


@dataclass
class CMsgProcessTransactionOrder(betterproto.Message):
    txn_id: int = betterproto.uint64_field(1)
    steam_txn_id: int = betterproto.uint64_field(2)
    partner_txn_id: int = betterproto.uint64_field(3)
    steam_id: float = betterproto.fixed64_field(4)
    time_stamp: int = betterproto.uint32_field(5)
    watermark: int = betterproto.uint64_field(6)
    purchase_report_status: int = betterproto.int32_field(7)
    currency: int = betterproto.uint32_field(8)
    items: List["CMsgProcessTransactionOrderItem"] = betterproto.message_field(9)


@dataclass
class CMsgProcessTransactionOrderItem(betterproto.Message):
    item_def_index: int = betterproto.uint32_field(1)
    item_price: int = betterproto.uint32_field(2)
    quantity: int = betterproto.uint32_field(3)
    category_desc: str = betterproto.string_field(4)
    store_purchase_type: int = betterproto.uint32_field(5)
    source_reference_id: int = betterproto.uint64_field(6)
    parent_stack_index: int = betterproto.int32_field(7)
    default_price: bool = betterproto.bool_field(8)
    is_user_facing: bool = betterproto.bool_field(9)


@dataclass
class CMsgGCToGCStoreProcessCDKeyTransaction(betterproto.Message):
    order: "CMsgProcessTransactionOrder" = betterproto.message_field(1)
    reason_code: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToGCStoreProcessCDKeyTransactionResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCToGCStoreProcessSettlement(betterproto.Message):
    order: "CMsgProcessTransactionOrder" = betterproto.message_field(1)
    partner: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToGCStoreProcessSettlementResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCToGCBroadcastConsoleCommand(betterproto.Message):
    con_command: str = betterproto.string_field(1)
    report_output: bool = betterproto.bool_field(2)
    sending_gc: int = betterproto.uint32_field(3)
    output_initiator: str = betterproto.string_field(4)


@dataclass
class CMsgGCToGCConsoleOutput(betterproto.Message):
    initiator: str = betterproto.string_field(1)
    sending_gc: int = betterproto.uint32_field(2)
    msgs: List["CMsgGCToGCConsoleOutputOutputLine"] = betterproto.message_field(3)
    is_last_for_source_job: bool = betterproto.bool_field(4)


@dataclass
class CMsgGCToGCConsoleOutputOutputLine(betterproto.Message):
    text: str = betterproto.string_field(1)
    spew_level: int = betterproto.uint32_field(2)


@dataclass
class CMsgItemAges(betterproto.Message):
    max_item_id_timestamps: List["CMsgItemAgesMaxItemIDTimestamp"] = betterproto.message_field(1)


@dataclass
class CMsgItemAgesMaxItemIDTimestamp(betterproto.Message):
    timestamp: int = betterproto.uint32_field(1)
    max_item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgGCToGCInternalTestMsg(betterproto.Message):
    sending_gc: int = betterproto.uint32_field(1)
    sender_id: float = betterproto.fixed64_field(2)
    context: int = betterproto.uint32_field(3)
    message_id: int = betterproto.uint32_field(4)
    message_body: bytes = betterproto.bytes_field(5)
    job_id_source: float = betterproto.fixed64_field(6)
    job_id_target: float = betterproto.fixed64_field(7)


@dataclass
class CMsgGCToGCClientServerVersionsUpdated(betterproto.Message):
    client_min_allowed_version: int = betterproto.uint32_field(1)
    client_active_version: int = betterproto.uint32_field(2)
    server_active_version: int = betterproto.uint32_field(3)
    server_deployed_version: int = betterproto.uint32_field(4)
    what_changed: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToGCBroadcastMessageFromSub(betterproto.Message):
    msg_id: int = betterproto.uint32_field(1)
    serialized_msg: bytes = betterproto.bytes_field(2)
    account_id_list: List[int] = betterproto.uint32_field(3)
    steam_id_list: List[float] = betterproto.fixed64_field(4)


@dataclass
class CMsgGCToClientCurrencyPricePoints(betterproto.Message):
    price_key: List[int] = betterproto.uint64_field(1)
    currencies: List["CMsgGCToClientCurrencyPricePointsCurrency"] = betterproto.message_field(2)


@dataclass
class CMsgGCToClientCurrencyPricePointsCurrency(betterproto.Message):
    currency_id: int = betterproto.uint32_field(1)
    currency_price: List[int] = betterproto.uint64_field(2)


@dataclass
class CMsgBannedWordList(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    banned_words: List[str] = betterproto.string_field(2)


@dataclass
class CEcon_FlushInventoryCache_Request(betterproto.Message):
    steamid: int = betterproto.uint64_field(1)
    appid: int = betterproto.uint32_field(2)
    contextid: int = betterproto.uint64_field(3)


@dataclass
class CEcon_FlushInventoryCache_Response(betterproto.Message):
    success: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCToGCFlushSteamInventoryCache(betterproto.Message):
    keys: List["CMsgGCToGCFlushSteamInventoryCacheKey"] = betterproto.message_field(1)


@dataclass
class CMsgGCToGCFlushSteamInventoryCacheKey(betterproto.Message):
    steamid: int = betterproto.uint64_field(1)
    contextid: int = betterproto.uint64_field(2)


@dataclass
class CMsgGCToGCUpdateSubscriptionItems(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    always_notify: bool = betterproto.bool_field(2)


@dataclass
class CMsgGCToGCSelfPing(betterproto.Message):
    sample_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToGCGetInfuxIntervalStats(betterproto.Message):
    pass


@dataclass
class CMsgGCToGCGetInfuxIntervalStatsResponse(betterproto.Message):
    stat_ids: List[float] = betterproto.fixed32_field(1)
    stat_total: List[int] = betterproto.uint64_field(2)
    stat_samples: List[int] = betterproto.uint32_field(3)
    stat_max: List[int] = betterproto.uint32_field(4)
    sample_duration_ms: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToGCPurchaseSucceeded(betterproto.Message):
    pass


@dataclass
class CExtraMsgBlock(betterproto.Message):
    msg_type: int = betterproto.uint32_field(1)
    contents: bytes = betterproto.bytes_field(2)
    msg_key: int = betterproto.uint64_field(3)
    is_compressed: bool = betterproto.bool_field(4)


@dataclass
class CMsgClientToGCGetLimitedItemPurchaseQuantity(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCGetLimitedItemPurchaseQuantityResponse(betterproto.Message):
    result: "CMsgClientToGCGetLimitedItemPurchaseQuantityResponseEResponse" = betterproto.enum_field(1)
    quantity_purchased: int = betterproto.uint32_field(2)
