# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: gcsdk_gcmessages.proto
# plugin: python-betterproto

from dataclasses import dataclass
from typing import List

import betterproto


class ESourceEngine(betterproto.Enum):
    Source1 = 0
    Source2 = 1


class PartnerAccountType(betterproto.Enum):
    NONE = 0
    PerfectWorld = 1
    Invalid = 3


class GCConnectionStatus(betterproto.Enum):
    HaveSession = 0
    GcGoingDown = 1
    NoSession = 2
    NoSessionInLogonQueue = 3
    NoSteam = 4
    Suspended = 5
    SteamGoingDown = 6


@dataclass
class CMsgSHA1Digest(betterproto.Message):
    block1: float = betterproto.fixed64_field(1)
    block2: float = betterproto.fixed64_field(2)
    block3: float = betterproto.fixed32_field(3)


@dataclass
class CMsgSOIDOwner(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    id: int = betterproto.uint64_field(2)


@dataclass
class CMsgSOSingleObject(betterproto.Message):
    type_id: int = betterproto.int32_field(2)
    object_data: bytes = betterproto.bytes_field(3)
    version: float = betterproto.fixed64_field(4)
    owner_soid: "CMsgSOIDOwner" = betterproto.message_field(5)
    service_id: int = betterproto.uint32_field(6)


@dataclass
class CMsgSOMultipleObjects(betterproto.Message):
    objects_modified: List["CMsgSOMultipleObjectsSingleObject"] = betterproto.message_field(2)
    version: float = betterproto.fixed64_field(3)
    objects_added: List["CMsgSOMultipleObjectsSingleObject"] = betterproto.message_field(4)
    objects_removed: List["CMsgSOMultipleObjectsSingleObject"] = betterproto.message_field(5)
    owner_soid: "CMsgSOIDOwner" = betterproto.message_field(6)
    service_id: int = betterproto.uint32_field(7)


@dataclass
class CMsgSOMultipleObjectsSingleObject(betterproto.Message):
    type_id: int = betterproto.int32_field(1)
    object_data: bytes = betterproto.bytes_field(2)


@dataclass
class CMsgSOCacheSubscribed(betterproto.Message):
    objects: List["CMsgSOCacheSubscribedSubscribedType"] = betterproto.message_field(2)
    version: float = betterproto.fixed64_field(3)
    owner_soid: "CMsgSOIDOwner" = betterproto.message_field(4)
    service_id: int = betterproto.uint32_field(5)
    service_list: List[int] = betterproto.uint32_field(6)
    sync_version: float = betterproto.fixed64_field(7)


@dataclass
class CMsgSOCacheSubscribedSubscribedType(betterproto.Message):
    type_id: int = betterproto.int32_field(1)
    object_data: List[bytes] = betterproto.bytes_field(2)


@dataclass
class CMsgSOCacheSubscribedUpToDate(betterproto.Message):
    version: float = betterproto.fixed64_field(1)
    owner_soid: "CMsgSOIDOwner" = betterproto.message_field(2)
    service_id: int = betterproto.uint32_field(3)
    service_list: List[int] = betterproto.uint32_field(4)
    sync_version: float = betterproto.fixed64_field(5)


@dataclass
class CMsgSOCacheUnsubscribed(betterproto.Message):
    owner_soid: "CMsgSOIDOwner" = betterproto.message_field(2)


@dataclass
class CMsgSOCacheSubscriptionCheck(betterproto.Message):
    version: float = betterproto.fixed64_field(2)
    owner_soid: "CMsgSOIDOwner" = betterproto.message_field(3)
    service_id: int = betterproto.uint32_field(4)
    service_list: List[int] = betterproto.uint32_field(5)
    sync_version: float = betterproto.fixed64_field(6)


@dataclass
class CMsgSOCacheSubscriptionRefresh(betterproto.Message):
    owner_soid: "CMsgSOIDOwner" = betterproto.message_field(2)


@dataclass
class CMsgSOCacheVersion(betterproto.Message):
    version: float = betterproto.fixed64_field(1)


@dataclass
class CMsgGCMultiplexMessage(betterproto.Message):
    msgtype: int = betterproto.uint32_field(1)
    payload: bytes = betterproto.bytes_field(2)
    steamids: List[float] = betterproto.fixed64_field(3)


@dataclass
class CMsgGCToGCSubGCStarting(betterproto.Message):
    dir_index: int = betterproto.uint32_field(1)


@dataclass
class CGCToGCMsgMasterAck(betterproto.Message):
    dir_index: int = betterproto.uint32_field(1)
    machine_name: str = betterproto.string_field(3)
    process_name: str = betterproto.string_field(4)
    directory: List["CGCToGCMsgMasterAckProcess"] = betterproto.message_field(6)


@dataclass
class CGCToGCMsgMasterAckProcess(betterproto.Message):
    dir_index: int = betterproto.uint32_field(1)
    type_instances: List[int] = betterproto.uint32_field(2)


@dataclass
class CGCToGCMsgMasterAckResponse(betterproto.Message):
    eresult: int = betterproto.int32_field(1)


@dataclass
class CMsgGCToGCUniverseStartup(betterproto.Message):
    is_initial_startup: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCToGCUniverseStartupResponse(betterproto.Message):
    eresult: int = betterproto.int32_field(1)


@dataclass
class CGCToGCMsgMasterStartupComplete(betterproto.Message):
    gc_info: List["CGCToGCMsgMasterStartupCompleteGCInfo"] = betterproto.message_field(1)


@dataclass
class CGCToGCMsgMasterStartupCompleteGCInfo(betterproto.Message):
    dir_index: int = betterproto.uint32_field(1)
    machine_name: str = betterproto.string_field(2)


@dataclass
class CGCToGCMsgRouted(betterproto.Message):
    msg_type: int = betterproto.uint32_field(1)
    sender_id: float = betterproto.fixed64_field(2)
    net_message: bytes = betterproto.bytes_field(3)


@dataclass
class CGCToGCMsgRoutedReply(betterproto.Message):
    msg_type: int = betterproto.uint32_field(1)
    net_message: bytes = betterproto.bytes_field(2)


@dataclass
class CMsgGCUpdateSubGCSessionInfo(betterproto.Message):
    updates: List["CMsgGCUpdateSubGCSessionInfoCMsgUpdate"] = betterproto.message_field(1)


@dataclass
class CMsgGCUpdateSubGCSessionInfoCMsgUpdate(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    ip: float = betterproto.fixed32_field(2)
    trusted: bool = betterproto.bool_field(3)


@dataclass
class CMsgGCRequestSubGCSessionInfo(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)


@dataclass
class CMsgGCRequestSubGCSessionInfoResponse(betterproto.Message):
    ip: float = betterproto.fixed32_field(1)
    trusted: bool = betterproto.bool_field(2)
    port: int = betterproto.uint32_field(3)
    success: bool = betterproto.bool_field(4)


@dataclass
class CMsgSOCacheHaveVersion(betterproto.Message):
    soid: "CMsgSOIDOwner" = betterproto.message_field(1)
    version: float = betterproto.fixed64_field(2)
    service_id: int = betterproto.uint32_field(3)
    cached_file_version: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientHello(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    socache_have_versions: List["CMsgSOCacheHaveVersion"] = betterproto.message_field(2)
    client_session_need: int = betterproto.uint32_field(3)
    client_launcher: "PartnerAccountType" = betterproto.enum_field(4)
    secret_key: str = betterproto.string_field(5)
    client_language: int = betterproto.uint32_field(6)
    engine: "ESourceEngine" = betterproto.enum_field(7)
    steamdatagram_login: bytes = betterproto.bytes_field(8)
    platform_id: int = betterproto.uint32_field(9)
    game_msg: bytes = betterproto.bytes_field(10)
    os_type: int = betterproto.int32_field(11)
    render_system: int = betterproto.uint32_field(12)
    render_system_req: int = betterproto.uint32_field(13)
    screen_width: int = betterproto.uint32_field(14)
    screen_height: int = betterproto.uint32_field(15)
    screen_refresh: int = betterproto.uint32_field(16)
    render_width: int = betterproto.uint32_field(17)
    render_height: int = betterproto.uint32_field(18)
    swap_width: int = betterproto.uint32_field(19)
    swap_height: int = betterproto.uint32_field(20)


@dataclass
class CMsgClientWelcome(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    game_data: bytes = betterproto.bytes_field(2)
    outofdate_subscribed_caches: List["CMsgSOCacheSubscribed"] = betterproto.message_field(3)
    uptodate_subscribed_caches: List["CMsgSOCacheSubscriptionCheck"] = betterproto.message_field(4)
    location: "CMsgClientWelcomeLocation" = betterproto.message_field(5)
    save_game_key: bytes = betterproto.bytes_field(6)
    item_schema_crc: float = betterproto.fixed32_field(7)
    items_game_url: str = betterproto.string_field(8)
    gc_socache_file_version: int = betterproto.uint32_field(9)
    txn_country_code: str = betterproto.string_field(10)
    game_data2: bytes = betterproto.bytes_field(11)
    rtime32_gc_welcome_timestamp: int = betterproto.uint32_field(12)
    currency: int = betterproto.uint32_field(13)
    balance: int = betterproto.uint32_field(14)
    balance_url: str = betterproto.string_field(15)


@dataclass
class CMsgClientWelcomeLocation(betterproto.Message):
    latitude: float = betterproto.float_field(1)
    longitude: float = betterproto.float_field(2)
    country: str = betterproto.string_field(3)


@dataclass
class CMsgConnectionStatus(betterproto.Message):
    status: "GCConnectionStatus" = betterproto.enum_field(1)
    client_session_need: int = betterproto.uint32_field(2)
    queue_position: int = betterproto.int32_field(3)
    queue_size: int = betterproto.int32_field(4)
    wait_seconds: int = betterproto.int32_field(5)
    estimated_wait_seconds_remaining: int = betterproto.int32_field(6)


@dataclass
class CMsgGCToGCSOCacheSubscribe(betterproto.Message):
    subscriber: float = betterproto.fixed64_field(1)
    subscribe_to_id: float = betterproto.fixed64_field(2)
    sync_version: float = betterproto.fixed64_field(3)
    have_versions: List["CMsgGCToGCSOCacheSubscribeCMsgHaveVersions"] = betterproto.message_field(4)
    subscribe_to_type: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToGCSOCacheSubscribeCMsgHaveVersions(betterproto.Message):
    service_id: int = betterproto.uint32_field(1)
    version: int = betterproto.uint64_field(2)


@dataclass
class CMsgGCToGCSOCacheUnsubscribe(betterproto.Message):
    subscriber: float = betterproto.fixed64_field(1)
    unsubscribe_from_id: float = betterproto.fixed64_field(2)
    unsubscribe_from_type: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCClientPing(betterproto.Message):
    pass


@dataclass
class CMsgGCToGCForwardAccountDetails(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    account_details: "CGCSystemMsg_GetAccountDetails_Response" = betterproto.message_field(2)
    age_seconds: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToGCLoadSessionSOCache(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    forward_account_details: "CMsgGCToGCForwardAccountDetails" = betterproto.message_field(2)


@dataclass
class CMsgGCToGCLoadSessionSOCacheResponse(betterproto.Message):
    pass


@dataclass
class CMsgGCToGCUpdateSessionStats(betterproto.Message):
    user_sessions: int = betterproto.uint32_field(1)
    server_sessions: int = betterproto.uint32_field(2)
    in_logon_surge: bool = betterproto.bool_field(3)


@dataclass
class CMsgGCToClientRequestDropped(betterproto.Message):
    pass


@dataclass
class CWorkshopPopulateItemDescriptionsRequest(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    languages: List[
        "CWorkshop_PopulateItemDescriptions_RequestItemDescriptionsLanguageBlock"
    ] = betterproto.message_field(2)


@dataclass
class CWorkshopPopulateItemDescriptionsRequestSingleItemDescription(betterproto.Message):
    gameitemid: int = betterproto.uint32_field(1)
    item_description: str = betterproto.string_field(2)


@dataclass
class CWorkshopPopulateItemDescriptionsRequestItemDescriptionsLanguageBlock(betterproto.Message):
    language: str = betterproto.string_field(1)
    descriptions: List["CWorkshop_PopulateItemDescriptions_RequestSingleItemDescription"] = betterproto.message_field(2)


@dataclass
class CWorkshopGetContributorsRequest(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    gameitemid: int = betterproto.uint32_field(2)


@dataclass
class CWorkshopGetContributorsResponse(betterproto.Message):
    contributors: List[float] = betterproto.fixed64_field(1)


@dataclass
class CWorkshopSetItemPaymentRulesRequest(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    gameitemid: int = betterproto.uint32_field(2)
    associated_workshop_files: List[
        "CWorkshop_SetItemPaymentRules_RequestWorkshopItemPaymentRule"
    ] = betterproto.message_field(3)
    partner_accounts: List["CWorkshop_SetItemPaymentRules_RequestPartnerItemPaymentRule"] = betterproto.message_field(4)
    validate_only: bool = betterproto.bool_field(5)
    make_workshop_files_subscribable: bool = betterproto.bool_field(6)
    associated_workshop_file_for_direct_payments: "CWorkshop_SetItemPaymentRules_RequestWorkshopDirectPaymentRule" = (
        betterproto.message_field(7)
    )


@dataclass
class CWorkshopSetItemPaymentRulesRequestWorkshopItemPaymentRule(betterproto.Message):
    workshop_file_id: int = betterproto.uint64_field(1)
    revenue_percentage: float = betterproto.float_field(2)
    rule_description: str = betterproto.string_field(3)
    rule_type: int = betterproto.uint32_field(4)


@dataclass
class CWorkshopSetItemPaymentRulesRequestWorkshopDirectPaymentRule(betterproto.Message):
    workshop_file_id: int = betterproto.uint64_field(1)
    rule_description: str = betterproto.string_field(2)


@dataclass
class CWorkshopSetItemPaymentRulesRequestPartnerItemPaymentRule(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    revenue_percentage: float = betterproto.float_field(2)
    rule_description: str = betterproto.string_field(3)


@dataclass
class CWorkshopSetItemPaymentRulesResponse(betterproto.Message):
    validation_errors: List[str] = betterproto.string_field(1)


@dataclass
class CCommunityClanAnnouncementInfo(betterproto.Message):
    gid: int = betterproto.uint64_field(1)
    clanid: int = betterproto.uint64_field(2)
    posterid: int = betterproto.uint64_field(3)
    headline: str = betterproto.string_field(4)
    posttime: int = betterproto.uint32_field(5)
    updatetime: int = betterproto.uint32_field(6)
    body: str = betterproto.string_field(7)
    commentcount: int = betterproto.int32_field(8)
    tags: List[str] = betterproto.string_field(9)
    language: int = betterproto.int32_field(10)
    hidden: bool = betterproto.bool_field(11)
    forum_topic_id: float = betterproto.fixed64_field(12)


@dataclass
class CCommunityGetClanAnnouncementsRequest(betterproto.Message):
    steamid: int = betterproto.uint64_field(1)
    offset: int = betterproto.uint32_field(2)
    count: int = betterproto.uint32_field(3)
    maxchars: int = betterproto.uint32_field(4)
    strip_html: bool = betterproto.bool_field(5)
    required_tags: List[str] = betterproto.string_field(6)
    require_no_tags: bool = betterproto.bool_field(7)
    language_preference: List[int] = betterproto.uint32_field(8)
    hidden_only: bool = betterproto.bool_field(9)
    only_gid: bool = betterproto.bool_field(10)
    rtime_oldest_date: int = betterproto.uint32_field(11)
    include_hidden: bool = betterproto.bool_field(12)
    include_partner_events: bool = betterproto.bool_field(13)


@dataclass
class CCommunityGetClanAnnouncementsResponse(betterproto.Message):
    maxchars: int = betterproto.uint32_field(1)
    strip_html: bool = betterproto.bool_field(2)
    announcements: List["CCommunity_ClanAnnouncementInfo"] = betterproto.message_field(3)


@dataclass
class CBroadcastPostGameDataFrameRequest(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    steamid: float = betterproto.fixed64_field(2)
    broadcast_id: float = betterproto.fixed64_field(3)
    frame_data: bytes = betterproto.bytes_field(4)


@dataclass
class CMsgSerializedSOCache(betterproto.Message):
    file_version: int = betterproto.uint32_field(1)
    caches: List["CMsgSerializedSOCacheCache"] = betterproto.message_field(2)
    gc_socache_file_version: int = betterproto.uint32_field(3)


@dataclass
class CMsgSerializedSOCacheTypeCache(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    objects: List[bytes] = betterproto.bytes_field(2)
    service_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgSerializedSOCacheCache(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    id: int = betterproto.uint64_field(2)
    versions: List["CMsgSerializedSOCacheCacheVersion"] = betterproto.message_field(3)
    type_caches: List["CMsgSerializedSOCacheTypeCache"] = betterproto.message_field(4)


@dataclass
class CMsgSerializedSOCacheCMsgSerializedSOCacheCacheVersion(betterproto.Message):
    service: int = betterproto.uint32_field(1)
    version: int = betterproto.uint64_field(2)


@dataclass
class CMsgGCToClientPollConvarRequest(betterproto.Message):
    convar_name: str = betterproto.string_field(1)
    poll_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientPollConvarResponse(betterproto.Message):
    poll_id: int = betterproto.uint32_field(1)
    convar_value: str = betterproto.string_field(2)


@dataclass
class CGCMsgCompressedMsgToClient(betterproto.Message):
    msg_id: int = betterproto.uint32_field(1)
    compressed_msg: bytes = betterproto.bytes_field(2)


@dataclass
class CMsgGCToGCMasterBroadcastMessage(betterproto.Message):
    users_per_second: int = betterproto.uint32_field(1)
    send_to_users: bool = betterproto.bool_field(2)
    send_to_servers: bool = betterproto.bool_field(3)
    msg_id: int = betterproto.uint32_field(4)
    msg_data: bytes = betterproto.bytes_field(5)


@dataclass
class CMsgGCToGCMasterSubscribeToCache(betterproto.Message):
    soid_type: int = betterproto.uint32_field(1)
    soid_id: float = betterproto.fixed64_field(2)
    account_ids: List[int] = betterproto.uint32_field(3)
    steam_ids: List[float] = betterproto.fixed64_field(4)


@dataclass
class CMsgGCToGCMasterSubscribeToCacheResponse(betterproto.Message):
    pass


@dataclass
class CMsgGCToGCMasterSubscribeToCacheAsync(betterproto.Message):
    subscribe_msg: "CMsgGCToGCMasterSubscribeToCache" = betterproto.message_field(1)


@dataclass
class CMsgGCToGCMasterUnsubscribeFromCache(betterproto.Message):
    soid_type: int = betterproto.uint32_field(1)
    soid_id: float = betterproto.fixed64_field(2)
    account_ids: List[int] = betterproto.uint32_field(3)
    steam_ids: List[float] = betterproto.fixed64_field(4)


@dataclass
class CMsgGCToGCMasterDestroyCache(betterproto.Message):
    soid_type: int = betterproto.uint32_field(1)
    soid_id: float = betterproto.fixed64_field(2)
